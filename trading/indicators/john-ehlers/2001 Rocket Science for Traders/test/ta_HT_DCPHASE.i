
#using <c:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\System.dll>
#line 1 "..\\..\\..\\c\\src\\ta_func\\ta_HT_DCPHASE.c"
#using <c:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\System.Data.dll>
#line 1 "..\\..\\..\\c\\src\\ta_func\\ta_HT_DCPHASE.c"
#using <c:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\System.XML.dll>
#line 1 "..\\..\\..\\c\\src\\ta_func\\ta_HT_DCPHASE.c"
/* TA-LIB Copyright (c) 1999-2007, Mario Fortier
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or
 * without modification, are permitted provided that the following
 * conditions are met:
 *
 * - Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 *
 * - Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in
 *   the documentation and/or other materials provided with the
 *   distribution.
 *
 * - Neither name of author nor the names of its contributors
 *   may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/* List of contributors:
 *
 *  Initial  Name/description
 *  -------------------------------------------------------------------
 *  MF       Mario Fortier
 *
 *
 * Change history:
 *
 *  MMDDYY BY   Description
 *  -------------------------------------------------------------------
 *  120802 MF   Template creation.
 *  052603 MF   Adapt code to compile with .NET Managed C++
 *
 */

/**** START GENCODE SECTION 1 - DO NOT DELETE THIS LINE ****/
/* All code within this section is automatically
 * generated by gen_code. Any modification will be lost
 * next time gen_code is run.
 */
/* Generated */ 
/* Generated */ 
/* Generated */    
/* TA-LIB Copyright (c) 1999-2007, Mario Fortier
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or
 * without modification, are permitted provided that the following
 * conditions are met:
 *
 * - Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 *
 * - Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in
 *   the documentation and/or other materials provided with the
 *   distribution.
 *
 * - Neither name of author nor the names of its contributors
 *   may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/* List of contributors:
 *
 *  Initial  Name/description
 *  -------------------------------------------------------------------
 *  MF       Mario Fortier
 *  PSG      Przemyslaw Grodzki (pgrodzki@ki.net.pl)
 *  RM       Robert Meier (talib@meierlim.com http://www.meierlim.com)
 *
 *  MMDDYY BY     Description
 *  -------------------------------------------------------------------
 *  050703 MF     First version with all the TA functions.
 *  112304 PSG    Fix #1072276 for TA_CandleDefaultSettings size.
 *  123004 RM,MF  Adapt code to work with Visual Studio 2005
 *  112605 MF     New TA_BOP (Balance Of Power) function.
 */

#pragma once

using namespace System;
using namespace System::Runtime::InteropServices;

namespace TicTacTec
{
	namespace TA
	{
	   namespace Library
	   {
          




























		  public ref class Core abstract sealed
		  {
		  public:
			 
/* TA-LIB Copyright (c) 1999-2007, Mario Fortier
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or
 * without modification, are permitted provided that the following
 * conditions are met:
 *
 * - Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 *
 * - Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in
 *   the documentation and/or other materials provided with the
 *   distribution.
 *
 * - Neither name of author nor the names of its contributors
 *   may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */



/*** The following block of code is to define:
 ***
 ***    UInt32  : 32 bits unsigned integer.
 ***    Int32   : 32 bits signed integer.
 ***    UInt64  : 64 bits unsigned integer.
 ***    Int64   : 64 bits signed integer.
 ***
 ***    INT_MIN : The minimal value for Int32
 ***    INT_MAX : The maximal value for Int32
 ***/

  
    /* Int32, UInt32, Int64 and UInt64 are built-in for .NET */	
    
    
  
















































/* Enumeration and macros to abstract syntax differences
 * between C, C++, managed C++ and Java.
 */


  /* CMJ is the "CManagedJava" macro. It allows to write variant
   * for the 3 different languages.
   */
  

  /* Enumeration abstraction */
  
  
  
  
  
  

  /* Structure abstraction */
  
  

  /* Pointer/reference abstraction */
  
  
  
  

  
  

  /* Misc. */
  
  
  





















































/* Abstraction of function calls within the library.
 * Needed because Java/.NET allows overloading, while for C the
 * TA_PREFIX allows to select variant of the same function.
 */




/* min/max value for a TA_Integer */



/* min/max value for a TA_Real 
 *
 * Use fix value making sense in the
 * context of TA-Lib (avoid to use DBL_MIN
 * and DBL_MAX standard macro because they
 * are troublesome with some compiler).
 */



/* A value outside of the min/max range 
 * indicates an undefined or default value.
 */



/* Part of this file is generated by gen_code */

enum class RetCode {    
    /*      0 */  Success,            /* No error */
    /*      1 */  LibNotInitialize, /* TA_Initialize was not sucessfully called */
    /*      2 */  BadParam, /* A parameter is out of range */
    /*      3 */  AllocErr, /* Possibly out-of-memory */
    /*      4 */  GroupNotFound,
    /*      5 */  FuncNotFound,
    /*      6 */  InvalidHandle,
    /*      7 */  InvalidParamHolder,
    /*      8 */  InvalidParamHolderType,
    /*      9 */  InvalidParamFunction,
    /*     10 */  InputNotAllInitialize,
    /*     11 */  OutputNotAllInitialize,
    /*     12 */  OutOfRangeStartIndex,
    /*     13 */  OutOfRangeEndIndex,
    /*     14 */  InvalidListType,
    /*     15 */  BadObject,
    /*     16 */  NotSupported,
    /*   5000 */  InternalError = 5000,
    /* 0xFFFF */  UnknownErr = 0xFFFF
};

enum class Compatibility {    
    Default,
    Metastock
};

enum class MAType {
   Sma =0,
   Ema =1,
   Wma =2,
   Dema =3,
   Tema =4,
   Trima =5,
   Kama =6,
   Mama =7,
   T3 =8
};


/**** START GENCODE SECTION 1 - DO NOT DELETE THIS LINE ****/
/* Generated */ 
/* Generated */ enum class FuncUnstId {
/* Generated */     /* 000 */  Adx,
/* Generated */     /* 001 */  Adxr,
/* Generated */     /* 002 */  Atr,
/* Generated */     /* 003 */  Cmo,
/* Generated */     /* 004 */  Dx,
/* Generated */     /* 005 */  Ema,
/* Generated */     /* 006 */  HtDcPeriod,
/* Generated */     /* 007 */  HtDcPhase,
/* Generated */     /* 008 */  HtPhasor,
/* Generated */     /* 009 */  HtSine,
/* Generated */     /* 010 */  HtTrendline,
/* Generated */     /* 011 */  HtTrendMode,
/* Generated */     /* 012 */  Kama,
/* Generated */     /* 013 */  Mama,
/* Generated */     /* 014 */  Mfi,
/* Generated */     /* 015 */  MinusDI,
/* Generated */     /* 016 */  MinusDM,
/* Generated */     /* 017 */  Natr,
/* Generated */     /* 018 */  PlusDI,
/* Generated */     /* 019 */  PlusDM,
/* Generated */     /* 020 */  Rsi,
/* Generated */     /* 021 */  StochRsi,
/* Generated */     /* 022 */  T3,
/* Generated */                FuncUnstAll,
/* Generated */                FuncUnstNone = -1
/* Generated */ };
/* Generated */ 
/**** END GENCODE SECTION 1 - DO NOT DELETE THIS LINE ****/

/* The TA_RangeType enum specifies the types of range that can be considered 
 * when to compare a part of a candle to other candles
 */

enum class RangeType {
   RealBody,
   HighLow,
   Shadows
};

/* The TA_CandleSettingType enum specifies which kind of setting to consider;
 * the settings are based on the parts of the candle and the common words
 * indicating the length (short, long, very long)
 */
enum class CandleSettingType {
    BodyLong,
    BodyVeryLong,
    BodyShort,
    BodyDoji,
    ShadowLong,
    ShadowVeryLong,
    ShadowShort,
    ShadowVeryShort,
    Near,
    Far,
    Equal,
    AllCandleSettings
};





		  private:
			  ref class CandleSetting sealed 
			  {
			  public:
				  enum class CandleSettingType settingType;
				  enum class RangeType rangeType;
				  int     avgPeriod;
				  double  factor;
			 };

			 ref class GlobalsType sealed
			 {
			 public:
				GlobalsType()
				{
					unstablePeriod = gcnew cli::array<unsigned int>((int)FuncUnstId::FuncUnstAll);
					compatibility = Compatibility::Default;
					for( int i=0; i < (int)FuncUnstId::FuncUnstAll; i++ )
						unstablePeriod[i] = 0;
					candleSettings = gcnew cli::array<CandleSetting^>((int)CandleSettingType::AllCandleSettings);
					for( int j=0; j < candleSettings->Length; j++ )
					{
						candleSettings[j] = gcnew CandleSetting();					
					}
				}

				/* For handling the compatibility with other software */
				Compatibility compatibility;

				/* For handling the unstable period of some TA function. */
				cli::array<unsigned int>^ unstablePeriod;

				/* For handling the candlestick global settings */
				cli::array<CandleSetting^>^ candleSettings;
			 };

			 static GlobalsType^ Globals;

             




















			 static  enum class RetCode TA_INT_EMA( int           startIdx,
									int           endIdx,
									cli::array<double>^ inReal_0,
									int           optInTimePeriod_0, 
									double        optInK_1,
									[Out]int% outBegIdx,
									[Out]int% outNbElement,
									cli::array<double>^ outReal_0);
             

			 static  enum class RetCode TA_INT_EMA( int           startIdx,
									int           endIdx,
									cli::array<float>^ inReal_0,
									int           optInTimePeriod_0, 
									double        optInK_1,
									[Out]int% outBegIdx,
									[Out]int% outNbElement,
									cli::array<double>^ outReal_0);

             



















			 static  enum class RetCode TA_INT_SMA( int     startIdx,
									int     endIdx,
									cli::array<double>^ inReal_0,
									int     optInTimePeriod_0, 
									[Out]int% outBegIdx,
									[Out]int% outNbElement,
									cli::array<double>^ outReal_0);
             

			 static  enum class RetCode TA_INT_SMA( int     startIdx,
									int     endIdx,
									cli::array<float>^ inReal_0,
									int     optInTimePeriod_0, 
									[Out]int% outBegIdx,
									[Out]int% outNbElement,
									cli::array<double>^ outReal_0 );

             




























			 static  enum class RetCode TA_INT_MACD( int    startIdx,
									 int    endIdx,
									 cli::array<double>^ inReal_0,
									 int    optInFastPeriod_0, /* 0 is fix 12 */
									 int    optInSlowPeriod_1, /* 0 is fix 26 */
									 int    optInSignalPeriod_2, 
									 [Out]int% outBegIdx,
									 [Out]int% outNbElement,
									 cli::array<double>^ outMACD_0,
									 cli::array<double>^ outMACDSignal_1,
									 cli::array<double>^ outMACDHist_2 );
             

			 static  enum class RetCode TA_INT_MACD( int    startIdx,
									 int    endIdx,
									 cli::array<float>^ inReal_0,
									 int    optInFastPeriod_0, /* 0 is fix 12 */
									 int    optInSlowPeriod_1, /* 0 is fix 26 */
									 int    optInSignalPeriod_2, 
									 [Out]int% outBegIdx,
									 [Out]int% outNbElement,
									 cli::array<double>^ outMACD_0,
									 cli::array<double>^ outMACDSignal_1,
									 cli::array<double>^ outMACDHist_2 );

             



























			 static  enum class RetCode TA_INT_PO( int    startIdx,
								   int    endIdx,
								   cli::array<double>^ inReal_0,
								   int    optInFastPeriod_0, 
								   int    optInSlowPeriod_1, 
								   MAType optInMethod_2,
								   [Out]int% outBegIdx,
								   [Out]int% outNbElement,
								   cli::array<double>^ outReal_0,
								   cli::array<double>^ tempBuffer,
								   int  doPercentageOutput );
             

			 static  enum class RetCode TA_INT_PO( int    startIdx,
								   int    endIdx,
								   cli::array<float>^ inReal_0,
								   int    optInFastPeriod_0, 
								   int    optInSlowPeriod_1, 
								   MAType optInMethod_2,
								   [Out]int% outBegIdx,
								   [Out]int% outNbElement,
								   cli::array<double>^ outReal_0,
								   cli::array<double>^ tempBuffer,
								   int  doPercentageOutput );

             


















			 static  enum class RetCode TA_INT_VAR( int    startIdx,
									int    endIdx,
									cli::array<double>^ inReal_0,
									int    optInTimePeriod_0,                       
									[Out]int% outBegIdx,
									[Out]int% outNbElement,
									cli::array<double>^ outReal_0);
             

			 static  enum class RetCode TA_INT_VAR( int    startIdx,
									int    endIdx,
									cli::array<float>^ inReal_0,
									int    optInTimePeriod_0,                       
									[Out]int% outBegIdx,
									[Out]int% outNbElement,
									cli::array<double>^ outReal_0);


             
















			 static void TA_INT_stddev_using_precalc_ma( cli::array<double>^  inReal,
												  cli::array<double>^ inMovAvg,
												  int inMovAvgBegIdx,
												  int inMovAvgNbElement,
												  int timePeriod,
												  cli::array<double>^ output );
             

			 static void TA_INT_stddev_using_precalc_ma( cli::array<float>^ inReal,
												  cli::array<double>^ inMovAvg,
												  int inMovAvgBegIdx,
												  int inMovAvgNbElement,
												  int timePeriod,
												  cli::array<double>^ output);

		  public:
			 static Core()
			 {
				// Initialize global settings
				Globals = gcnew GlobalsType;
				/* Set the default value to global variables */
				RestoreCandleDefaultSettings( CandleSettingType::AllCandleSettings );
			 }

			 static  enum class RetCode SetUnstablePeriod(  enum class FuncUnstId id,
															   unsigned int  unstablePeriod );

			 static unsigned int GetUnstablePeriod( FuncUnstId id );

			 static  enum class RetCode SetCompatibility( enum class Compatibility value );
			 static  enum class Compatibility GetCompatibility( void );

			 static  enum class RetCode SetCandleSettings(  enum class CandleSettingType settingType, 
															enum class RangeType rangeType,
															int avgPeriod, 
															double factor )
			 {    
				 if( settingType >= CandleSettingType::AllCandleSettings )
				 {
					 return RetCode::BadParam;
				 }
				 Globals->candleSettings[(int)settingType]->settingType = settingType;
				 Globals->candleSettings[(int)settingType]->rangeType = rangeType;
				 Globals->candleSettings[(int)settingType]->avgPeriod = avgPeriod;
				 Globals->candleSettings[(int)settingType]->factor = factor;
				 return RetCode::Success;
			 }

			 
			 static enum class RetCode RestoreCandleDefaultSettings( CandleSettingType settingType )
			 {			
				switch( settingType )
				{
				case CandleSettingType::BodyLong:
				   SetCandleSettings( CandleSettingType::BodyLong, RangeType::RealBody, 10, 1.0 );
				   break;
				case CandleSettingType::BodyVeryLong:
				   SetCandleSettings( CandleSettingType::BodyVeryLong, RangeType::RealBody, 10, 3.0 );
				   break;
				case CandleSettingType::BodyShort:
				   SetCandleSettings( CandleSettingType::BodyShort, RangeType::RealBody, 10, 1.0 );
				   break;
				case CandleSettingType::BodyDoji:
				   SetCandleSettings( CandleSettingType::BodyDoji, RangeType::HighLow, 10, 0.1 );
				   break;
				case CandleSettingType::ShadowLong:
				   SetCandleSettings( CandleSettingType::ShadowLong, RangeType::RealBody, 0, 1.0 );
				   break;
				case CandleSettingType::ShadowVeryLong:
				   SetCandleSettings( CandleSettingType::ShadowVeryLong, RangeType::RealBody, 0, 2.0 );
				   break;
				case CandleSettingType::ShadowShort:
				   SetCandleSettings( CandleSettingType::ShadowShort, RangeType::Shadows, 10, 1.0 );
				   break;
				case CandleSettingType::ShadowVeryShort:
				   SetCandleSettings( CandleSettingType::ShadowVeryShort, RangeType::HighLow, 10, 0.1 );
				   break;
				case CandleSettingType::Near:
				   SetCandleSettings( CandleSettingType::Near, RangeType::HighLow, 5, 0.2 );
				   break;
				case CandleSettingType::Far:
				   SetCandleSettings( CandleSettingType::Far, RangeType::HighLow, 5, 0.6 );
				   break;
				case CandleSettingType::Equal:
				   SetCandleSettings( CandleSettingType::Equal, RangeType::HighLow, 5, 0.05);
				   break;
				case CandleSettingType::AllCandleSettings:
				   SetCandleSettings( CandleSettingType::BodyLong, RangeType::RealBody, 10, 1.0 );
				   SetCandleSettings( CandleSettingType::BodyVeryLong, RangeType::RealBody, 10, 3.0 );
				   SetCandleSettings( CandleSettingType::BodyShort, RangeType::RealBody, 10, 1.0 );
				   SetCandleSettings( CandleSettingType::BodyDoji, RangeType::HighLow, 10, 0.1 );
				   SetCandleSettings( CandleSettingType::ShadowLong, RangeType::RealBody, 0, 1.0 );
				   SetCandleSettings( CandleSettingType::ShadowVeryLong, RangeType::RealBody, 0, 2.0 );
				   SetCandleSettings( CandleSettingType::ShadowShort, RangeType::Shadows, 10, 1.0 );
				   SetCandleSettings( CandleSettingType::ShadowVeryShort, RangeType::HighLow, 10, 0.1 );
				   SetCandleSettings( CandleSettingType::Near, RangeType::HighLow, 5, 0.2 );
				   SetCandleSettings( CandleSettingType::Far, RangeType::HighLow, 5, 0.6 );
				   SetCandleSettings( CandleSettingType::Equal, RangeType::HighLow, 5, 0.05);
				   break;
				}

				return RetCode::Success;
			 }

/**** START GENCODE SECTION 1 - DO NOT DELETE THIS LINE ****/
         static int AcosLookback( void );

         




















         static enum class RetCode Acos( int    startIdx,
                                         int    endIdx,
                                         cli::array<double>^ inReal,
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );
         
         static enum class RetCode Acos( int    startIdx,
                                         int    endIdx,
                                         cli::array<float>^ inReal,
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );

         
         

         static int AdLookback( void );

         





























         static enum class RetCode Ad( int    startIdx,
                                       int    endIdx,
                                       cli::array<double>^ inHigh,
                                       cli::array<double>^ inLow,
                                       cli::array<double>^ inClose,
                                       cli::array<double>^ inVolume,
                                       [Out]int%    outBegIdx,
                                       [Out]int%    outNBElement,
                                       cli::array<double>^  outReal );
         
         static enum class RetCode Ad( int    startIdx,
                                       int    endIdx,
                                       cli::array<float>^ inHigh,
                                       cli::array<float>^ inLow,
                                       cli::array<float>^ inClose,
                                       cli::array<float>^ inVolume,
                                       [Out]int%    outBegIdx,
                                       [Out]int%    outNBElement,
                                       cli::array<double>^  outReal );

         
         

         static int AddLookback( void );

         























         static enum class RetCode Add( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inReal0,
                                        cli::array<double>^ inReal1,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Add( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inReal0,
                                        cli::array<float>^ inReal1,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int AdOscLookback( int           optInFastPeriod, /* From 2 to 100000 */
                                 int           optInSlowPeriod );  /* From 2 to 100000 */

         



































         static enum class RetCode AdOsc( int    startIdx,
                                          int    endIdx,
                                          cli::array<double>^ inHigh,
                                          cli::array<double>^ inLow,
                                          cli::array<double>^ inClose,
                                          cli::array<double>^ inVolume,
                                          int           optInFastPeriod, /* From 2 to 100000 */
                                          int           optInSlowPeriod, /* From 2 to 100000 */
                                          [Out]int%    outBegIdx,
                                          [Out]int%    outNBElement,
                                          cli::array<double>^  outReal );
         
         static enum class RetCode AdOsc( int    startIdx,
                                          int    endIdx,
                                          cli::array<float>^ inHigh,
                                          cli::array<float>^ inLow,
                                          cli::array<float>^ inClose,
                                          cli::array<float>^ inVolume,
                                          int           optInFastPeriod, /* From 2 to 100000 */
                                          int           optInSlowPeriod, /* From 2 to 100000 */
                                          [Out]int%    outBegIdx,
                                          [Out]int%    outNBElement,
                                          cli::array<double>^  outReal );

         
         

         static int AdxLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         





























         static enum class RetCode Adx( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inHigh,
                                        cli::array<double>^ inLow,
                                        cli::array<double>^ inClose,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Adx( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inHigh,
                                        cli::array<float>^ inLow,
                                        cli::array<float>^ inClose,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int AdxrLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         





























         static enum class RetCode Adxr( int    startIdx,
                                         int    endIdx,
                                         cli::array<double>^ inHigh,
                                         cli::array<double>^ inLow,
                                         cli::array<double>^ inClose,
                                         int           optInTimePeriod, /* From 2 to 100000 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );
         
         static enum class RetCode Adxr( int    startIdx,
                                         int    endIdx,
                                         cli::array<float>^ inHigh,
                                         cli::array<float>^ inLow,
                                         cli::array<float>^ inClose,
                                         int           optInTimePeriod, /* From 2 to 100000 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );

         
         

         static int ApoLookback( int           optInFastPeriod, /* From 2 to 100000 */
                               int           optInSlowPeriod, /* From 2 to 100000 */
                               MAType        optInMAType ); 
         





























         static enum class RetCode Apo( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inReal,
                                        int           optInFastPeriod, /* From 2 to 100000 */
                                        int           optInSlowPeriod, /* From 2 to 100000 */
                                        MAType        optInMAType,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Apo( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inReal,
                                        int           optInFastPeriod, /* From 2 to 100000 */
                                        int           optInSlowPeriod, /* From 2 to 100000 */
                                        MAType        optInMAType,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int AroonLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         





























         static enum class RetCode Aroon( int    startIdx,
                                          int    endIdx,
                                          cli::array<double>^ inHigh,
                                          cli::array<double>^ inLow,
                                          int           optInTimePeriod, /* From 2 to 100000 */
                                          [Out]int%    outBegIdx,
                                          [Out]int%    outNBElement,
                                          cli::array<double>^  outAroonDown,
                                          cli::array<double>^  outAroonUp );
         
         static enum class RetCode Aroon( int    startIdx,
                                          int    endIdx,
                                          cli::array<float>^ inHigh,
                                          cli::array<float>^ inLow,
                                          int           optInTimePeriod, /* From 2 to 100000 */
                                          [Out]int%    outBegIdx,
                                          [Out]int%    outNBElement,
                                          cli::array<double>^  outAroonDown,
                                          cli::array<double>^  outAroonUp );

         
         

         static int AroonOscLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         


























         static enum class RetCode AroonOsc( int    startIdx,
                                             int    endIdx,
                                             cli::array<double>^ inHigh,
                                             cli::array<double>^ inLow,
                                             int           optInTimePeriod, /* From 2 to 100000 */
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<double>^  outReal );
         
         static enum class RetCode AroonOsc( int    startIdx,
                                             int    endIdx,
                                             cli::array<float>^ inHigh,
                                             cli::array<float>^ inLow,
                                             int           optInTimePeriod, /* From 2 to 100000 */
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<double>^  outReal );

         
         

         static int AsinLookback( void );

         




















         static enum class RetCode Asin( int    startIdx,
                                         int    endIdx,
                                         cli::array<double>^ inReal,
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );
         
         static enum class RetCode Asin( int    startIdx,
                                         int    endIdx,
                                         cli::array<float>^ inReal,
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );

         
         

         static int AtanLookback( void );

         




















         static enum class RetCode Atan( int    startIdx,
                                         int    endIdx,
                                         cli::array<double>^ inReal,
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );
         
         static enum class RetCode Atan( int    startIdx,
                                         int    endIdx,
                                         cli::array<float>^ inReal,
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );

         
         

         static int AtrLookback( int           optInTimePeriod );  /* From 1 to 100000 */

         





























         static enum class RetCode Atr( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inHigh,
                                        cli::array<double>^ inLow,
                                        cli::array<double>^ inClose,
                                        int           optInTimePeriod, /* From 1 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Atr( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inHigh,
                                        cli::array<float>^ inLow,
                                        cli::array<float>^ inClose,
                                        int           optInTimePeriod, /* From 1 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int AvgPriceLookback( void );

         





























         static enum class RetCode AvgPrice( int    startIdx,
                                             int    endIdx,
                                             cli::array<double>^ inOpen,
                                             cli::array<double>^ inHigh,
                                             cli::array<double>^ inLow,
                                             cli::array<double>^ inClose,
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<double>^  outReal );
         
         static enum class RetCode AvgPrice( int    startIdx,
                                             int    endIdx,
                                             cli::array<float>^ inOpen,
                                             cli::array<float>^ inHigh,
                                             cli::array<float>^ inLow,
                                             cli::array<float>^ inClose,
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<double>^  outReal );

         
         

         static int BbandsLookback( int           optInTimePeriod, /* From 2 to 100000 */
                                  double        optInNbDevUp, /* From TA_REAL_MIN to TA_REAL_MAX */
                                  double        optInNbDevDn, /* From TA_REAL_MIN to TA_REAL_MAX */
                                  MAType        optInMAType ); 
         






































         static enum class RetCode Bbands( int    startIdx,
                                           int    endIdx,
                                           cli::array<double>^ inReal,
                                           int           optInTimePeriod, /* From 2 to 100000 */
                                           double        optInNbDevUp, /* From TA_REAL_MIN to TA_REAL_MAX */
                                           double        optInNbDevDn, /* From TA_REAL_MIN to TA_REAL_MAX */
                                           MAType        optInMAType,
                                           [Out]int%    outBegIdx,
                                           [Out]int%    outNBElement,
                                           cli::array<double>^  outRealUpperBand,
                                           cli::array<double>^  outRealMiddleBand,
                                           cli::array<double>^  outRealLowerBand );
         
         static enum class RetCode Bbands( int    startIdx,
                                           int    endIdx,
                                           cli::array<float>^ inReal,
                                           int           optInTimePeriod, /* From 2 to 100000 */
                                           double        optInNbDevUp, /* From TA_REAL_MIN to TA_REAL_MAX */
                                           double        optInNbDevDn, /* From TA_REAL_MIN to TA_REAL_MAX */
                                           MAType        optInMAType,
                                           [Out]int%    outBegIdx,
                                           [Out]int%    outNBElement,
                                           cli::array<double>^  outRealUpperBand,
                                           cli::array<double>^  outRealMiddleBand,
                                           cli::array<double>^  outRealLowerBand );

         
         

         static int BetaLookback( int           optInTimePeriod );  /* From 1 to 100000 */

         


























         static enum class RetCode Beta( int    startIdx,
                                         int    endIdx,
                                         cli::array<double>^ inReal0,
                                         cli::array<double>^ inReal1,
                                         int           optInTimePeriod, /* From 1 to 100000 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );
         
         static enum class RetCode Beta( int    startIdx,
                                         int    endIdx,
                                         cli::array<float>^ inReal0,
                                         cli::array<float>^ inReal1,
                                         int           optInTimePeriod, /* From 1 to 100000 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );

         
         

         static int BopLookback( void );

         





























         static enum class RetCode Bop( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inOpen,
                                        cli::array<double>^ inHigh,
                                        cli::array<double>^ inLow,
                                        cli::array<double>^ inClose,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Bop( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inOpen,
                                        cli::array<float>^ inHigh,
                                        cli::array<float>^ inLow,
                                        cli::array<float>^ inClose,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int CciLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         





























         static enum class RetCode Cci( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inHigh,
                                        cli::array<double>^ inLow,
                                        cli::array<double>^ inClose,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Cci( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inHigh,
                                        cli::array<float>^ inLow,
                                        cli::array<float>^ inClose,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int Cdl2CrowsLookback( void );

         





























         static enum class RetCode Cdl2Crows( int    startIdx,
                                              int    endIdx,
                                              cli::array<double>^ inOpen,
                                              cli::array<double>^ inHigh,
                                              cli::array<double>^ inLow,
                                              cli::array<double>^ inClose,
                                              [Out]int%    outBegIdx,
                                              [Out]int%    outNBElement,
                                              cli::array<int>^  outInteger );
         
         static enum class RetCode Cdl2Crows( int    startIdx,
                                              int    endIdx,
                                              cli::array<float>^ inOpen,
                                              cli::array<float>^ inHigh,
                                              cli::array<float>^ inLow,
                                              cli::array<float>^ inClose,
                                              [Out]int%    outBegIdx,
                                              [Out]int%    outNBElement,
                                              cli::array<int>^  outInteger );

         
         

         static int Cdl3BlackCrowsLookback( void );

         





























         static enum class RetCode Cdl3BlackCrows( int    startIdx,
                                                   int    endIdx,
                                                   cli::array<double>^ inOpen,
                                                   cli::array<double>^ inHigh,
                                                   cli::array<double>^ inLow,
                                                   cli::array<double>^ inClose,
                                                   [Out]int%    outBegIdx,
                                                   [Out]int%    outNBElement,
                                                   cli::array<int>^  outInteger );
         
         static enum class RetCode Cdl3BlackCrows( int    startIdx,
                                                   int    endIdx,
                                                   cli::array<float>^ inOpen,
                                                   cli::array<float>^ inHigh,
                                                   cli::array<float>^ inLow,
                                                   cli::array<float>^ inClose,
                                                   [Out]int%    outBegIdx,
                                                   [Out]int%    outNBElement,
                                                   cli::array<int>^  outInteger );

         
         

         static int Cdl3InsideLookback( void );

         





























         static enum class RetCode Cdl3Inside( int    startIdx,
                                               int    endIdx,
                                               cli::array<double>^ inOpen,
                                               cli::array<double>^ inHigh,
                                               cli::array<double>^ inLow,
                                               cli::array<double>^ inClose,
                                               [Out]int%    outBegIdx,
                                               [Out]int%    outNBElement,
                                               cli::array<int>^  outInteger );
         
         static enum class RetCode Cdl3Inside( int    startIdx,
                                               int    endIdx,
                                               cli::array<float>^ inOpen,
                                               cli::array<float>^ inHigh,
                                               cli::array<float>^ inLow,
                                               cli::array<float>^ inClose,
                                               [Out]int%    outBegIdx,
                                               [Out]int%    outNBElement,
                                               cli::array<int>^  outInteger );

         
         

         static int Cdl3LineStrikeLookback( void );

         





























         static enum class RetCode Cdl3LineStrike( int    startIdx,
                                                   int    endIdx,
                                                   cli::array<double>^ inOpen,
                                                   cli::array<double>^ inHigh,
                                                   cli::array<double>^ inLow,
                                                   cli::array<double>^ inClose,
                                                   [Out]int%    outBegIdx,
                                                   [Out]int%    outNBElement,
                                                   cli::array<int>^  outInteger );
         
         static enum class RetCode Cdl3LineStrike( int    startIdx,
                                                   int    endIdx,
                                                   cli::array<float>^ inOpen,
                                                   cli::array<float>^ inHigh,
                                                   cli::array<float>^ inLow,
                                                   cli::array<float>^ inClose,
                                                   [Out]int%    outBegIdx,
                                                   [Out]int%    outNBElement,
                                                   cli::array<int>^  outInteger );

         
         

         static int Cdl3OutsideLookback( void );

         





























         static enum class RetCode Cdl3Outside( int    startIdx,
                                                int    endIdx,
                                                cli::array<double>^ inOpen,
                                                cli::array<double>^ inHigh,
                                                cli::array<double>^ inLow,
                                                cli::array<double>^ inClose,
                                                [Out]int%    outBegIdx,
                                                [Out]int%    outNBElement,
                                                cli::array<int>^  outInteger );
         
         static enum class RetCode Cdl3Outside( int    startIdx,
                                                int    endIdx,
                                                cli::array<float>^ inOpen,
                                                cli::array<float>^ inHigh,
                                                cli::array<float>^ inLow,
                                                cli::array<float>^ inClose,
                                                [Out]int%    outBegIdx,
                                                [Out]int%    outNBElement,
                                                cli::array<int>^  outInteger );

         
         

         static int Cdl3StarsInSouthLookback( void );

         





























         static enum class RetCode Cdl3StarsInSouth( int    startIdx,
                                                     int    endIdx,
                                                     cli::array<double>^ inOpen,
                                                     cli::array<double>^ inHigh,
                                                     cli::array<double>^ inLow,
                                                     cli::array<double>^ inClose,
                                                     [Out]int%    outBegIdx,
                                                     [Out]int%    outNBElement,
                                                     cli::array<int>^  outInteger );
         
         static enum class RetCode Cdl3StarsInSouth( int    startIdx,
                                                     int    endIdx,
                                                     cli::array<float>^ inOpen,
                                                     cli::array<float>^ inHigh,
                                                     cli::array<float>^ inLow,
                                                     cli::array<float>^ inClose,
                                                     [Out]int%    outBegIdx,
                                                     [Out]int%    outNBElement,
                                                     cli::array<int>^  outInteger );

         
         

         static int Cdl3WhiteSoldiersLookback( void );

         





























         static enum class RetCode Cdl3WhiteSoldiers( int    startIdx,
                                                      int    endIdx,
                                                      cli::array<double>^ inOpen,
                                                      cli::array<double>^ inHigh,
                                                      cli::array<double>^ inLow,
                                                      cli::array<double>^ inClose,
                                                      [Out]int%    outBegIdx,
                                                      [Out]int%    outNBElement,
                                                      cli::array<int>^  outInteger );
         
         static enum class RetCode Cdl3WhiteSoldiers( int    startIdx,
                                                      int    endIdx,
                                                      cli::array<float>^ inOpen,
                                                      cli::array<float>^ inHigh,
                                                      cli::array<float>^ inLow,
                                                      cli::array<float>^ inClose,
                                                      [Out]int%    outBegIdx,
                                                      [Out]int%    outNBElement,
                                                      cli::array<int>^  outInteger );

         
         

         static int CdlAbandonedBabyLookback( double        optInPenetration );  /* From 0 to TA_REAL_MAX */

         
































         static enum class RetCode CdlAbandonedBaby( int    startIdx,
                                                     int    endIdx,
                                                     cli::array<double>^ inOpen,
                                                     cli::array<double>^ inHigh,
                                                     cli::array<double>^ inLow,
                                                     cli::array<double>^ inClose,
                                                     double        optInPenetration, /* From 0 to TA_REAL_MAX */
                                                     [Out]int%    outBegIdx,
                                                     [Out]int%    outNBElement,
                                                     cli::array<int>^  outInteger );
         
         static enum class RetCode CdlAbandonedBaby( int    startIdx,
                                                     int    endIdx,
                                                     cli::array<float>^ inOpen,
                                                     cli::array<float>^ inHigh,
                                                     cli::array<float>^ inLow,
                                                     cli::array<float>^ inClose,
                                                     double        optInPenetration, /* From 0 to TA_REAL_MAX */
                                                     [Out]int%    outBegIdx,
                                                     [Out]int%    outNBElement,
                                                     cli::array<int>^  outInteger );

         
         

         static int CdlAdvanceBlockLookback( void );

         





























         static enum class RetCode CdlAdvanceBlock( int    startIdx,
                                                    int    endIdx,
                                                    cli::array<double>^ inOpen,
                                                    cli::array<double>^ inHigh,
                                                    cli::array<double>^ inLow,
                                                    cli::array<double>^ inClose,
                                                    [Out]int%    outBegIdx,
                                                    [Out]int%    outNBElement,
                                                    cli::array<int>^  outInteger );
         
         static enum class RetCode CdlAdvanceBlock( int    startIdx,
                                                    int    endIdx,
                                                    cli::array<float>^ inOpen,
                                                    cli::array<float>^ inHigh,
                                                    cli::array<float>^ inLow,
                                                    cli::array<float>^ inClose,
                                                    [Out]int%    outBegIdx,
                                                    [Out]int%    outNBElement,
                                                    cli::array<int>^  outInteger );

         
         

         static int CdlBeltHoldLookback( void );

         





























         static enum class RetCode CdlBeltHold( int    startIdx,
                                                int    endIdx,
                                                cli::array<double>^ inOpen,
                                                cli::array<double>^ inHigh,
                                                cli::array<double>^ inLow,
                                                cli::array<double>^ inClose,
                                                [Out]int%    outBegIdx,
                                                [Out]int%    outNBElement,
                                                cli::array<int>^  outInteger );
         
         static enum class RetCode CdlBeltHold( int    startIdx,
                                                int    endIdx,
                                                cli::array<float>^ inOpen,
                                                cli::array<float>^ inHigh,
                                                cli::array<float>^ inLow,
                                                cli::array<float>^ inClose,
                                                [Out]int%    outBegIdx,
                                                [Out]int%    outNBElement,
                                                cli::array<int>^  outInteger );

         
         

         static int CdlBreakawayLookback( void );

         





























         static enum class RetCode CdlBreakaway( int    startIdx,
                                                 int    endIdx,
                                                 cli::array<double>^ inOpen,
                                                 cli::array<double>^ inHigh,
                                                 cli::array<double>^ inLow,
                                                 cli::array<double>^ inClose,
                                                 [Out]int%    outBegIdx,
                                                 [Out]int%    outNBElement,
                                                 cli::array<int>^  outInteger );
         
         static enum class RetCode CdlBreakaway( int    startIdx,
                                                 int    endIdx,
                                                 cli::array<float>^ inOpen,
                                                 cli::array<float>^ inHigh,
                                                 cli::array<float>^ inLow,
                                                 cli::array<float>^ inClose,
                                                 [Out]int%    outBegIdx,
                                                 [Out]int%    outNBElement,
                                                 cli::array<int>^  outInteger );

         
         

         static int CdlClosingMarubozuLookback( void );

         





























         static enum class RetCode CdlClosingMarubozu( int    startIdx,
                                                       int    endIdx,
                                                       cli::array<double>^ inOpen,
                                                       cli::array<double>^ inHigh,
                                                       cli::array<double>^ inLow,
                                                       cli::array<double>^ inClose,
                                                       [Out]int%    outBegIdx,
                                                       [Out]int%    outNBElement,
                                                       cli::array<int>^  outInteger );
         
         static enum class RetCode CdlClosingMarubozu( int    startIdx,
                                                       int    endIdx,
                                                       cli::array<float>^ inOpen,
                                                       cli::array<float>^ inHigh,
                                                       cli::array<float>^ inLow,
                                                       cli::array<float>^ inClose,
                                                       [Out]int%    outBegIdx,
                                                       [Out]int%    outNBElement,
                                                       cli::array<int>^  outInteger );

         
         

         static int CdlConcealBabysWallLookback( void );

         





























         static enum class RetCode CdlConcealBabysWall( int    startIdx,
                                                        int    endIdx,
                                                        cli::array<double>^ inOpen,
                                                        cli::array<double>^ inHigh,
                                                        cli::array<double>^ inLow,
                                                        cli::array<double>^ inClose,
                                                        [Out]int%    outBegIdx,
                                                        [Out]int%    outNBElement,
                                                        cli::array<int>^  outInteger );
         
         static enum class RetCode CdlConcealBabysWall( int    startIdx,
                                                        int    endIdx,
                                                        cli::array<float>^ inOpen,
                                                        cli::array<float>^ inHigh,
                                                        cli::array<float>^ inLow,
                                                        cli::array<float>^ inClose,
                                                        [Out]int%    outBegIdx,
                                                        [Out]int%    outNBElement,
                                                        cli::array<int>^  outInteger );

         
         

         static int CdlCounterAttackLookback( void );

         





























         static enum class RetCode CdlCounterAttack( int    startIdx,
                                                     int    endIdx,
                                                     cli::array<double>^ inOpen,
                                                     cli::array<double>^ inHigh,
                                                     cli::array<double>^ inLow,
                                                     cli::array<double>^ inClose,
                                                     [Out]int%    outBegIdx,
                                                     [Out]int%    outNBElement,
                                                     cli::array<int>^  outInteger );
         
         static enum class RetCode CdlCounterAttack( int    startIdx,
                                                     int    endIdx,
                                                     cli::array<float>^ inOpen,
                                                     cli::array<float>^ inHigh,
                                                     cli::array<float>^ inLow,
                                                     cli::array<float>^ inClose,
                                                     [Out]int%    outBegIdx,
                                                     [Out]int%    outNBElement,
                                                     cli::array<int>^  outInteger );

         
         

         static int CdlDarkCloudCoverLookback( double        optInPenetration );  /* From 0 to TA_REAL_MAX */

         
































         static enum class RetCode CdlDarkCloudCover( int    startIdx,
                                                      int    endIdx,
                                                      cli::array<double>^ inOpen,
                                                      cli::array<double>^ inHigh,
                                                      cli::array<double>^ inLow,
                                                      cli::array<double>^ inClose,
                                                      double        optInPenetration, /* From 0 to TA_REAL_MAX */
                                                      [Out]int%    outBegIdx,
                                                      [Out]int%    outNBElement,
                                                      cli::array<int>^  outInteger );
         
         static enum class RetCode CdlDarkCloudCover( int    startIdx,
                                                      int    endIdx,
                                                      cli::array<float>^ inOpen,
                                                      cli::array<float>^ inHigh,
                                                      cli::array<float>^ inLow,
                                                      cli::array<float>^ inClose,
                                                      double        optInPenetration, /* From 0 to TA_REAL_MAX */
                                                      [Out]int%    outBegIdx,
                                                      [Out]int%    outNBElement,
                                                      cli::array<int>^  outInteger );

         
         

         static int CdlDojiLookback( void );

         





























         static enum class RetCode CdlDoji( int    startIdx,
                                            int    endIdx,
                                            cli::array<double>^ inOpen,
                                            cli::array<double>^ inHigh,
                                            cli::array<double>^ inLow,
                                            cli::array<double>^ inClose,
                                            [Out]int%    outBegIdx,
                                            [Out]int%    outNBElement,
                                            cli::array<int>^  outInteger );
         
         static enum class RetCode CdlDoji( int    startIdx,
                                            int    endIdx,
                                            cli::array<float>^ inOpen,
                                            cli::array<float>^ inHigh,
                                            cli::array<float>^ inLow,
                                            cli::array<float>^ inClose,
                                            [Out]int%    outBegIdx,
                                            [Out]int%    outNBElement,
                                            cli::array<int>^  outInteger );

         
         

         static int CdlDojiStarLookback( void );

         





























         static enum class RetCode CdlDojiStar( int    startIdx,
                                                int    endIdx,
                                                cli::array<double>^ inOpen,
                                                cli::array<double>^ inHigh,
                                                cli::array<double>^ inLow,
                                                cli::array<double>^ inClose,
                                                [Out]int%    outBegIdx,
                                                [Out]int%    outNBElement,
                                                cli::array<int>^  outInteger );
         
         static enum class RetCode CdlDojiStar( int    startIdx,
                                                int    endIdx,
                                                cli::array<float>^ inOpen,
                                                cli::array<float>^ inHigh,
                                                cli::array<float>^ inLow,
                                                cli::array<float>^ inClose,
                                                [Out]int%    outBegIdx,
                                                [Out]int%    outNBElement,
                                                cli::array<int>^  outInteger );

         
         

         static int CdlDragonflyDojiLookback( void );

         





























         static enum class RetCode CdlDragonflyDoji( int    startIdx,
                                                     int    endIdx,
                                                     cli::array<double>^ inOpen,
                                                     cli::array<double>^ inHigh,
                                                     cli::array<double>^ inLow,
                                                     cli::array<double>^ inClose,
                                                     [Out]int%    outBegIdx,
                                                     [Out]int%    outNBElement,
                                                     cli::array<int>^  outInteger );
         
         static enum class RetCode CdlDragonflyDoji( int    startIdx,
                                                     int    endIdx,
                                                     cli::array<float>^ inOpen,
                                                     cli::array<float>^ inHigh,
                                                     cli::array<float>^ inLow,
                                                     cli::array<float>^ inClose,
                                                     [Out]int%    outBegIdx,
                                                     [Out]int%    outNBElement,
                                                     cli::array<int>^  outInteger );

         
         

         static int CdlEngulfingLookback( void );

         





























         static enum class RetCode CdlEngulfing( int    startIdx,
                                                 int    endIdx,
                                                 cli::array<double>^ inOpen,
                                                 cli::array<double>^ inHigh,
                                                 cli::array<double>^ inLow,
                                                 cli::array<double>^ inClose,
                                                 [Out]int%    outBegIdx,
                                                 [Out]int%    outNBElement,
                                                 cli::array<int>^  outInteger );
         
         static enum class RetCode CdlEngulfing( int    startIdx,
                                                 int    endIdx,
                                                 cli::array<float>^ inOpen,
                                                 cli::array<float>^ inHigh,
                                                 cli::array<float>^ inLow,
                                                 cli::array<float>^ inClose,
                                                 [Out]int%    outBegIdx,
                                                 [Out]int%    outNBElement,
                                                 cli::array<int>^  outInteger );

         
         

         static int CdlEveningDojiStarLookback( double        optInPenetration );  /* From 0 to TA_REAL_MAX */

         
































         static enum class RetCode CdlEveningDojiStar( int    startIdx,
                                                       int    endIdx,
                                                       cli::array<double>^ inOpen,
                                                       cli::array<double>^ inHigh,
                                                       cli::array<double>^ inLow,
                                                       cli::array<double>^ inClose,
                                                       double        optInPenetration, /* From 0 to TA_REAL_MAX */
                                                       [Out]int%    outBegIdx,
                                                       [Out]int%    outNBElement,
                                                       cli::array<int>^  outInteger );
         
         static enum class RetCode CdlEveningDojiStar( int    startIdx,
                                                       int    endIdx,
                                                       cli::array<float>^ inOpen,
                                                       cli::array<float>^ inHigh,
                                                       cli::array<float>^ inLow,
                                                       cli::array<float>^ inClose,
                                                       double        optInPenetration, /* From 0 to TA_REAL_MAX */
                                                       [Out]int%    outBegIdx,
                                                       [Out]int%    outNBElement,
                                                       cli::array<int>^  outInteger );

         
         

         static int CdlEveningStarLookback( double        optInPenetration );  /* From 0 to TA_REAL_MAX */

         
































         static enum class RetCode CdlEveningStar( int    startIdx,
                                                   int    endIdx,
                                                   cli::array<double>^ inOpen,
                                                   cli::array<double>^ inHigh,
                                                   cli::array<double>^ inLow,
                                                   cli::array<double>^ inClose,
                                                   double        optInPenetration, /* From 0 to TA_REAL_MAX */
                                                   [Out]int%    outBegIdx,
                                                   [Out]int%    outNBElement,
                                                   cli::array<int>^  outInteger );
         
         static enum class RetCode CdlEveningStar( int    startIdx,
                                                   int    endIdx,
                                                   cli::array<float>^ inOpen,
                                                   cli::array<float>^ inHigh,
                                                   cli::array<float>^ inLow,
                                                   cli::array<float>^ inClose,
                                                   double        optInPenetration, /* From 0 to TA_REAL_MAX */
                                                   [Out]int%    outBegIdx,
                                                   [Out]int%    outNBElement,
                                                   cli::array<int>^  outInteger );

         
         

         static int CdlGapSideSideWhiteLookback( void );

         





























         static enum class RetCode CdlGapSideSideWhite( int    startIdx,
                                                        int    endIdx,
                                                        cli::array<double>^ inOpen,
                                                        cli::array<double>^ inHigh,
                                                        cli::array<double>^ inLow,
                                                        cli::array<double>^ inClose,
                                                        [Out]int%    outBegIdx,
                                                        [Out]int%    outNBElement,
                                                        cli::array<int>^  outInteger );
         
         static enum class RetCode CdlGapSideSideWhite( int    startIdx,
                                                        int    endIdx,
                                                        cli::array<float>^ inOpen,
                                                        cli::array<float>^ inHigh,
                                                        cli::array<float>^ inLow,
                                                        cli::array<float>^ inClose,
                                                        [Out]int%    outBegIdx,
                                                        [Out]int%    outNBElement,
                                                        cli::array<int>^  outInteger );

         
         

         static int CdlGravestoneDojiLookback( void );

         





























         static enum class RetCode CdlGravestoneDoji( int    startIdx,
                                                      int    endIdx,
                                                      cli::array<double>^ inOpen,
                                                      cli::array<double>^ inHigh,
                                                      cli::array<double>^ inLow,
                                                      cli::array<double>^ inClose,
                                                      [Out]int%    outBegIdx,
                                                      [Out]int%    outNBElement,
                                                      cli::array<int>^  outInteger );
         
         static enum class RetCode CdlGravestoneDoji( int    startIdx,
                                                      int    endIdx,
                                                      cli::array<float>^ inOpen,
                                                      cli::array<float>^ inHigh,
                                                      cli::array<float>^ inLow,
                                                      cli::array<float>^ inClose,
                                                      [Out]int%    outBegIdx,
                                                      [Out]int%    outNBElement,
                                                      cli::array<int>^  outInteger );

         
         

         static int CdlHammerLookback( void );

         





























         static enum class RetCode CdlHammer( int    startIdx,
                                              int    endIdx,
                                              cli::array<double>^ inOpen,
                                              cli::array<double>^ inHigh,
                                              cli::array<double>^ inLow,
                                              cli::array<double>^ inClose,
                                              [Out]int%    outBegIdx,
                                              [Out]int%    outNBElement,
                                              cli::array<int>^  outInteger );
         
         static enum class RetCode CdlHammer( int    startIdx,
                                              int    endIdx,
                                              cli::array<float>^ inOpen,
                                              cli::array<float>^ inHigh,
                                              cli::array<float>^ inLow,
                                              cli::array<float>^ inClose,
                                              [Out]int%    outBegIdx,
                                              [Out]int%    outNBElement,
                                              cli::array<int>^  outInteger );

         
         

         static int CdlHangingManLookback( void );

         





























         static enum class RetCode CdlHangingMan( int    startIdx,
                                                  int    endIdx,
                                                  cli::array<double>^ inOpen,
                                                  cli::array<double>^ inHigh,
                                                  cli::array<double>^ inLow,
                                                  cli::array<double>^ inClose,
                                                  [Out]int%    outBegIdx,
                                                  [Out]int%    outNBElement,
                                                  cli::array<int>^  outInteger );
         
         static enum class RetCode CdlHangingMan( int    startIdx,
                                                  int    endIdx,
                                                  cli::array<float>^ inOpen,
                                                  cli::array<float>^ inHigh,
                                                  cli::array<float>^ inLow,
                                                  cli::array<float>^ inClose,
                                                  [Out]int%    outBegIdx,
                                                  [Out]int%    outNBElement,
                                                  cli::array<int>^  outInteger );

         
         

         static int CdlHaramiLookback( void );

         





























         static enum class RetCode CdlHarami( int    startIdx,
                                              int    endIdx,
                                              cli::array<double>^ inOpen,
                                              cli::array<double>^ inHigh,
                                              cli::array<double>^ inLow,
                                              cli::array<double>^ inClose,
                                              [Out]int%    outBegIdx,
                                              [Out]int%    outNBElement,
                                              cli::array<int>^  outInteger );
         
         static enum class RetCode CdlHarami( int    startIdx,
                                              int    endIdx,
                                              cli::array<float>^ inOpen,
                                              cli::array<float>^ inHigh,
                                              cli::array<float>^ inLow,
                                              cli::array<float>^ inClose,
                                              [Out]int%    outBegIdx,
                                              [Out]int%    outNBElement,
                                              cli::array<int>^  outInteger );

         
         

         static int CdlHaramiCrossLookback( void );

         





























         static enum class RetCode CdlHaramiCross( int    startIdx,
                                                   int    endIdx,
                                                   cli::array<double>^ inOpen,
                                                   cli::array<double>^ inHigh,
                                                   cli::array<double>^ inLow,
                                                   cli::array<double>^ inClose,
                                                   [Out]int%    outBegIdx,
                                                   [Out]int%    outNBElement,
                                                   cli::array<int>^  outInteger );
         
         static enum class RetCode CdlHaramiCross( int    startIdx,
                                                   int    endIdx,
                                                   cli::array<float>^ inOpen,
                                                   cli::array<float>^ inHigh,
                                                   cli::array<float>^ inLow,
                                                   cli::array<float>^ inClose,
                                                   [Out]int%    outBegIdx,
                                                   [Out]int%    outNBElement,
                                                   cli::array<int>^  outInteger );

         
         

         static int CdlHignWaveLookback( void );

         





























         static enum class RetCode CdlHignWave( int    startIdx,
                                                int    endIdx,
                                                cli::array<double>^ inOpen,
                                                cli::array<double>^ inHigh,
                                                cli::array<double>^ inLow,
                                                cli::array<double>^ inClose,
                                                [Out]int%    outBegIdx,
                                                [Out]int%    outNBElement,
                                                cli::array<int>^  outInteger );
         
         static enum class RetCode CdlHignWave( int    startIdx,
                                                int    endIdx,
                                                cli::array<float>^ inOpen,
                                                cli::array<float>^ inHigh,
                                                cli::array<float>^ inLow,
                                                cli::array<float>^ inClose,
                                                [Out]int%    outBegIdx,
                                                [Out]int%    outNBElement,
                                                cli::array<int>^  outInteger );

         
         

         static int CdlHikkakeLookback( void );

         





























         static enum class RetCode CdlHikkake( int    startIdx,
                                               int    endIdx,
                                               cli::array<double>^ inOpen,
                                               cli::array<double>^ inHigh,
                                               cli::array<double>^ inLow,
                                               cli::array<double>^ inClose,
                                               [Out]int%    outBegIdx,
                                               [Out]int%    outNBElement,
                                               cli::array<int>^  outInteger );
         
         static enum class RetCode CdlHikkake( int    startIdx,
                                               int    endIdx,
                                               cli::array<float>^ inOpen,
                                               cli::array<float>^ inHigh,
                                               cli::array<float>^ inLow,
                                               cli::array<float>^ inClose,
                                               [Out]int%    outBegIdx,
                                               [Out]int%    outNBElement,
                                               cli::array<int>^  outInteger );

         
         

         static int CdlHikkakeModLookback( void );

         





























         static enum class RetCode CdlHikkakeMod( int    startIdx,
                                                  int    endIdx,
                                                  cli::array<double>^ inOpen,
                                                  cli::array<double>^ inHigh,
                                                  cli::array<double>^ inLow,
                                                  cli::array<double>^ inClose,
                                                  [Out]int%    outBegIdx,
                                                  [Out]int%    outNBElement,
                                                  cli::array<int>^  outInteger );
         
         static enum class RetCode CdlHikkakeMod( int    startIdx,
                                                  int    endIdx,
                                                  cli::array<float>^ inOpen,
                                                  cli::array<float>^ inHigh,
                                                  cli::array<float>^ inLow,
                                                  cli::array<float>^ inClose,
                                                  [Out]int%    outBegIdx,
                                                  [Out]int%    outNBElement,
                                                  cli::array<int>^  outInteger );

         
         

         static int CdlHomingPigeonLookback( void );

         





























         static enum class RetCode CdlHomingPigeon( int    startIdx,
                                                    int    endIdx,
                                                    cli::array<double>^ inOpen,
                                                    cli::array<double>^ inHigh,
                                                    cli::array<double>^ inLow,
                                                    cli::array<double>^ inClose,
                                                    [Out]int%    outBegIdx,
                                                    [Out]int%    outNBElement,
                                                    cli::array<int>^  outInteger );
         
         static enum class RetCode CdlHomingPigeon( int    startIdx,
                                                    int    endIdx,
                                                    cli::array<float>^ inOpen,
                                                    cli::array<float>^ inHigh,
                                                    cli::array<float>^ inLow,
                                                    cli::array<float>^ inClose,
                                                    [Out]int%    outBegIdx,
                                                    [Out]int%    outNBElement,
                                                    cli::array<int>^  outInteger );

         
         

         static int CdlIdentical3CrowsLookback( void );

         





























         static enum class RetCode CdlIdentical3Crows( int    startIdx,
                                                       int    endIdx,
                                                       cli::array<double>^ inOpen,
                                                       cli::array<double>^ inHigh,
                                                       cli::array<double>^ inLow,
                                                       cli::array<double>^ inClose,
                                                       [Out]int%    outBegIdx,
                                                       [Out]int%    outNBElement,
                                                       cli::array<int>^  outInteger );
         
         static enum class RetCode CdlIdentical3Crows( int    startIdx,
                                                       int    endIdx,
                                                       cli::array<float>^ inOpen,
                                                       cli::array<float>^ inHigh,
                                                       cli::array<float>^ inLow,
                                                       cli::array<float>^ inClose,
                                                       [Out]int%    outBegIdx,
                                                       [Out]int%    outNBElement,
                                                       cli::array<int>^  outInteger );

         
         

         static int CdlInNeckLookback( void );

         





























         static enum class RetCode CdlInNeck( int    startIdx,
                                              int    endIdx,
                                              cli::array<double>^ inOpen,
                                              cli::array<double>^ inHigh,
                                              cli::array<double>^ inLow,
                                              cli::array<double>^ inClose,
                                              [Out]int%    outBegIdx,
                                              [Out]int%    outNBElement,
                                              cli::array<int>^  outInteger );
         
         static enum class RetCode CdlInNeck( int    startIdx,
                                              int    endIdx,
                                              cli::array<float>^ inOpen,
                                              cli::array<float>^ inHigh,
                                              cli::array<float>^ inLow,
                                              cli::array<float>^ inClose,
                                              [Out]int%    outBegIdx,
                                              [Out]int%    outNBElement,
                                              cli::array<int>^  outInteger );

         
         

         static int CdlInvertedHammerLookback( void );

         





























         static enum class RetCode CdlInvertedHammer( int    startIdx,
                                                      int    endIdx,
                                                      cli::array<double>^ inOpen,
                                                      cli::array<double>^ inHigh,
                                                      cli::array<double>^ inLow,
                                                      cli::array<double>^ inClose,
                                                      [Out]int%    outBegIdx,
                                                      [Out]int%    outNBElement,
                                                      cli::array<int>^  outInteger );
         
         static enum class RetCode CdlInvertedHammer( int    startIdx,
                                                      int    endIdx,
                                                      cli::array<float>^ inOpen,
                                                      cli::array<float>^ inHigh,
                                                      cli::array<float>^ inLow,
                                                      cli::array<float>^ inClose,
                                                      [Out]int%    outBegIdx,
                                                      [Out]int%    outNBElement,
                                                      cli::array<int>^  outInteger );

         
         

         static int CdlKickingLookback( void );

         





























         static enum class RetCode CdlKicking( int    startIdx,
                                               int    endIdx,
                                               cli::array<double>^ inOpen,
                                               cli::array<double>^ inHigh,
                                               cli::array<double>^ inLow,
                                               cli::array<double>^ inClose,
                                               [Out]int%    outBegIdx,
                                               [Out]int%    outNBElement,
                                               cli::array<int>^  outInteger );
         
         static enum class RetCode CdlKicking( int    startIdx,
                                               int    endIdx,
                                               cli::array<float>^ inOpen,
                                               cli::array<float>^ inHigh,
                                               cli::array<float>^ inLow,
                                               cli::array<float>^ inClose,
                                               [Out]int%    outBegIdx,
                                               [Out]int%    outNBElement,
                                               cli::array<int>^  outInteger );

         
         

         static int CdlKickingByLengthLookback( void );

         





























         static enum class RetCode CdlKickingByLength( int    startIdx,
                                                       int    endIdx,
                                                       cli::array<double>^ inOpen,
                                                       cli::array<double>^ inHigh,
                                                       cli::array<double>^ inLow,
                                                       cli::array<double>^ inClose,
                                                       [Out]int%    outBegIdx,
                                                       [Out]int%    outNBElement,
                                                       cli::array<int>^  outInteger );
         
         static enum class RetCode CdlKickingByLength( int    startIdx,
                                                       int    endIdx,
                                                       cli::array<float>^ inOpen,
                                                       cli::array<float>^ inHigh,
                                                       cli::array<float>^ inLow,
                                                       cli::array<float>^ inClose,
                                                       [Out]int%    outBegIdx,
                                                       [Out]int%    outNBElement,
                                                       cli::array<int>^  outInteger );

         
         

         static int CdlLadderBottomLookback( void );

         





























         static enum class RetCode CdlLadderBottom( int    startIdx,
                                                    int    endIdx,
                                                    cli::array<double>^ inOpen,
                                                    cli::array<double>^ inHigh,
                                                    cli::array<double>^ inLow,
                                                    cli::array<double>^ inClose,
                                                    [Out]int%    outBegIdx,
                                                    [Out]int%    outNBElement,
                                                    cli::array<int>^  outInteger );
         
         static enum class RetCode CdlLadderBottom( int    startIdx,
                                                    int    endIdx,
                                                    cli::array<float>^ inOpen,
                                                    cli::array<float>^ inHigh,
                                                    cli::array<float>^ inLow,
                                                    cli::array<float>^ inClose,
                                                    [Out]int%    outBegIdx,
                                                    [Out]int%    outNBElement,
                                                    cli::array<int>^  outInteger );

         
         

         static int CdlLongLeggedDojiLookback( void );

         





























         static enum class RetCode CdlLongLeggedDoji( int    startIdx,
                                                      int    endIdx,
                                                      cli::array<double>^ inOpen,
                                                      cli::array<double>^ inHigh,
                                                      cli::array<double>^ inLow,
                                                      cli::array<double>^ inClose,
                                                      [Out]int%    outBegIdx,
                                                      [Out]int%    outNBElement,
                                                      cli::array<int>^  outInteger );
         
         static enum class RetCode CdlLongLeggedDoji( int    startIdx,
                                                      int    endIdx,
                                                      cli::array<float>^ inOpen,
                                                      cli::array<float>^ inHigh,
                                                      cli::array<float>^ inLow,
                                                      cli::array<float>^ inClose,
                                                      [Out]int%    outBegIdx,
                                                      [Out]int%    outNBElement,
                                                      cli::array<int>^  outInteger );

         
         

         static int CdlLongLineLookback( void );

         





























         static enum class RetCode CdlLongLine( int    startIdx,
                                                int    endIdx,
                                                cli::array<double>^ inOpen,
                                                cli::array<double>^ inHigh,
                                                cli::array<double>^ inLow,
                                                cli::array<double>^ inClose,
                                                [Out]int%    outBegIdx,
                                                [Out]int%    outNBElement,
                                                cli::array<int>^  outInteger );
         
         static enum class RetCode CdlLongLine( int    startIdx,
                                                int    endIdx,
                                                cli::array<float>^ inOpen,
                                                cli::array<float>^ inHigh,
                                                cli::array<float>^ inLow,
                                                cli::array<float>^ inClose,
                                                [Out]int%    outBegIdx,
                                                [Out]int%    outNBElement,
                                                cli::array<int>^  outInteger );

         
         

         static int CdlMarubozuLookback( void );

         





























         static enum class RetCode CdlMarubozu( int    startIdx,
                                                int    endIdx,
                                                cli::array<double>^ inOpen,
                                                cli::array<double>^ inHigh,
                                                cli::array<double>^ inLow,
                                                cli::array<double>^ inClose,
                                                [Out]int%    outBegIdx,
                                                [Out]int%    outNBElement,
                                                cli::array<int>^  outInteger );
         
         static enum class RetCode CdlMarubozu( int    startIdx,
                                                int    endIdx,
                                                cli::array<float>^ inOpen,
                                                cli::array<float>^ inHigh,
                                                cli::array<float>^ inLow,
                                                cli::array<float>^ inClose,
                                                [Out]int%    outBegIdx,
                                                [Out]int%    outNBElement,
                                                cli::array<int>^  outInteger );

         
         

         static int CdlMatchingLowLookback( void );

         





























         static enum class RetCode CdlMatchingLow( int    startIdx,
                                                   int    endIdx,
                                                   cli::array<double>^ inOpen,
                                                   cli::array<double>^ inHigh,
                                                   cli::array<double>^ inLow,
                                                   cli::array<double>^ inClose,
                                                   [Out]int%    outBegIdx,
                                                   [Out]int%    outNBElement,
                                                   cli::array<int>^  outInteger );
         
         static enum class RetCode CdlMatchingLow( int    startIdx,
                                                   int    endIdx,
                                                   cli::array<float>^ inOpen,
                                                   cli::array<float>^ inHigh,
                                                   cli::array<float>^ inLow,
                                                   cli::array<float>^ inClose,
                                                   [Out]int%    outBegIdx,
                                                   [Out]int%    outNBElement,
                                                   cli::array<int>^  outInteger );

         
         

         static int CdlMatHoldLookback( double        optInPenetration );  /* From 0 to TA_REAL_MAX */

         
































         static enum class RetCode CdlMatHold( int    startIdx,
                                               int    endIdx,
                                               cli::array<double>^ inOpen,
                                               cli::array<double>^ inHigh,
                                               cli::array<double>^ inLow,
                                               cli::array<double>^ inClose,
                                               double        optInPenetration, /* From 0 to TA_REAL_MAX */
                                               [Out]int%    outBegIdx,
                                               [Out]int%    outNBElement,
                                               cli::array<int>^  outInteger );
         
         static enum class RetCode CdlMatHold( int    startIdx,
                                               int    endIdx,
                                               cli::array<float>^ inOpen,
                                               cli::array<float>^ inHigh,
                                               cli::array<float>^ inLow,
                                               cli::array<float>^ inClose,
                                               double        optInPenetration, /* From 0 to TA_REAL_MAX */
                                               [Out]int%    outBegIdx,
                                               [Out]int%    outNBElement,
                                               cli::array<int>^  outInteger );

         
         

         static int CdlMorningDojiStarLookback( double        optInPenetration );  /* From 0 to TA_REAL_MAX */

         
































         static enum class RetCode CdlMorningDojiStar( int    startIdx,
                                                       int    endIdx,
                                                       cli::array<double>^ inOpen,
                                                       cli::array<double>^ inHigh,
                                                       cli::array<double>^ inLow,
                                                       cli::array<double>^ inClose,
                                                       double        optInPenetration, /* From 0 to TA_REAL_MAX */
                                                       [Out]int%    outBegIdx,
                                                       [Out]int%    outNBElement,
                                                       cli::array<int>^  outInteger );
         
         static enum class RetCode CdlMorningDojiStar( int    startIdx,
                                                       int    endIdx,
                                                       cli::array<float>^ inOpen,
                                                       cli::array<float>^ inHigh,
                                                       cli::array<float>^ inLow,
                                                       cli::array<float>^ inClose,
                                                       double        optInPenetration, /* From 0 to TA_REAL_MAX */
                                                       [Out]int%    outBegIdx,
                                                       [Out]int%    outNBElement,
                                                       cli::array<int>^  outInteger );

         
         

         static int CdlMorningStarLookback( double        optInPenetration );  /* From 0 to TA_REAL_MAX */

         
































         static enum class RetCode CdlMorningStar( int    startIdx,
                                                   int    endIdx,
                                                   cli::array<double>^ inOpen,
                                                   cli::array<double>^ inHigh,
                                                   cli::array<double>^ inLow,
                                                   cli::array<double>^ inClose,
                                                   double        optInPenetration, /* From 0 to TA_REAL_MAX */
                                                   [Out]int%    outBegIdx,
                                                   [Out]int%    outNBElement,
                                                   cli::array<int>^  outInteger );
         
         static enum class RetCode CdlMorningStar( int    startIdx,
                                                   int    endIdx,
                                                   cli::array<float>^ inOpen,
                                                   cli::array<float>^ inHigh,
                                                   cli::array<float>^ inLow,
                                                   cli::array<float>^ inClose,
                                                   double        optInPenetration, /* From 0 to TA_REAL_MAX */
                                                   [Out]int%    outBegIdx,
                                                   [Out]int%    outNBElement,
                                                   cli::array<int>^  outInteger );

         
         

         static int CdlOnNeckLookback( void );

         





























         static enum class RetCode CdlOnNeck( int    startIdx,
                                              int    endIdx,
                                              cli::array<double>^ inOpen,
                                              cli::array<double>^ inHigh,
                                              cli::array<double>^ inLow,
                                              cli::array<double>^ inClose,
                                              [Out]int%    outBegIdx,
                                              [Out]int%    outNBElement,
                                              cli::array<int>^  outInteger );
         
         static enum class RetCode CdlOnNeck( int    startIdx,
                                              int    endIdx,
                                              cli::array<float>^ inOpen,
                                              cli::array<float>^ inHigh,
                                              cli::array<float>^ inLow,
                                              cli::array<float>^ inClose,
                                              [Out]int%    outBegIdx,
                                              [Out]int%    outNBElement,
                                              cli::array<int>^  outInteger );

         
         

         static int CdlPiercingLookback( void );

         





























         static enum class RetCode CdlPiercing( int    startIdx,
                                                int    endIdx,
                                                cli::array<double>^ inOpen,
                                                cli::array<double>^ inHigh,
                                                cli::array<double>^ inLow,
                                                cli::array<double>^ inClose,
                                                [Out]int%    outBegIdx,
                                                [Out]int%    outNBElement,
                                                cli::array<int>^  outInteger );
         
         static enum class RetCode CdlPiercing( int    startIdx,
                                                int    endIdx,
                                                cli::array<float>^ inOpen,
                                                cli::array<float>^ inHigh,
                                                cli::array<float>^ inLow,
                                                cli::array<float>^ inClose,
                                                [Out]int%    outBegIdx,
                                                [Out]int%    outNBElement,
                                                cli::array<int>^  outInteger );

         
         

         static int CdlRickshawManLookback( void );

         





























         static enum class RetCode CdlRickshawMan( int    startIdx,
                                                   int    endIdx,
                                                   cli::array<double>^ inOpen,
                                                   cli::array<double>^ inHigh,
                                                   cli::array<double>^ inLow,
                                                   cli::array<double>^ inClose,
                                                   [Out]int%    outBegIdx,
                                                   [Out]int%    outNBElement,
                                                   cli::array<int>^  outInteger );
         
         static enum class RetCode CdlRickshawMan( int    startIdx,
                                                   int    endIdx,
                                                   cli::array<float>^ inOpen,
                                                   cli::array<float>^ inHigh,
                                                   cli::array<float>^ inLow,
                                                   cli::array<float>^ inClose,
                                                   [Out]int%    outBegIdx,
                                                   [Out]int%    outNBElement,
                                                   cli::array<int>^  outInteger );

         
         

         static int CdlRiseFall3MethodsLookback( void );

         





























         static enum class RetCode CdlRiseFall3Methods( int    startIdx,
                                                        int    endIdx,
                                                        cli::array<double>^ inOpen,
                                                        cli::array<double>^ inHigh,
                                                        cli::array<double>^ inLow,
                                                        cli::array<double>^ inClose,
                                                        [Out]int%    outBegIdx,
                                                        [Out]int%    outNBElement,
                                                        cli::array<int>^  outInteger );
         
         static enum class RetCode CdlRiseFall3Methods( int    startIdx,
                                                        int    endIdx,
                                                        cli::array<float>^ inOpen,
                                                        cli::array<float>^ inHigh,
                                                        cli::array<float>^ inLow,
                                                        cli::array<float>^ inClose,
                                                        [Out]int%    outBegIdx,
                                                        [Out]int%    outNBElement,
                                                        cli::array<int>^  outInteger );

         
         

         static int CdlSeperatingLinesLookback( void );

         





























         static enum class RetCode CdlSeperatingLines( int    startIdx,
                                                       int    endIdx,
                                                       cli::array<double>^ inOpen,
                                                       cli::array<double>^ inHigh,
                                                       cli::array<double>^ inLow,
                                                       cli::array<double>^ inClose,
                                                       [Out]int%    outBegIdx,
                                                       [Out]int%    outNBElement,
                                                       cli::array<int>^  outInteger );
         
         static enum class RetCode CdlSeperatingLines( int    startIdx,
                                                       int    endIdx,
                                                       cli::array<float>^ inOpen,
                                                       cli::array<float>^ inHigh,
                                                       cli::array<float>^ inLow,
                                                       cli::array<float>^ inClose,
                                                       [Out]int%    outBegIdx,
                                                       [Out]int%    outNBElement,
                                                       cli::array<int>^  outInteger );

         
         

         static int CdlShootingStarLookback( void );

         





























         static enum class RetCode CdlShootingStar( int    startIdx,
                                                    int    endIdx,
                                                    cli::array<double>^ inOpen,
                                                    cli::array<double>^ inHigh,
                                                    cli::array<double>^ inLow,
                                                    cli::array<double>^ inClose,
                                                    [Out]int%    outBegIdx,
                                                    [Out]int%    outNBElement,
                                                    cli::array<int>^  outInteger );
         
         static enum class RetCode CdlShootingStar( int    startIdx,
                                                    int    endIdx,
                                                    cli::array<float>^ inOpen,
                                                    cli::array<float>^ inHigh,
                                                    cli::array<float>^ inLow,
                                                    cli::array<float>^ inClose,
                                                    [Out]int%    outBegIdx,
                                                    [Out]int%    outNBElement,
                                                    cli::array<int>^  outInteger );

         
         

         static int CdlShortLineLookback( void );

         





























         static enum class RetCode CdlShortLine( int    startIdx,
                                                 int    endIdx,
                                                 cli::array<double>^ inOpen,
                                                 cli::array<double>^ inHigh,
                                                 cli::array<double>^ inLow,
                                                 cli::array<double>^ inClose,
                                                 [Out]int%    outBegIdx,
                                                 [Out]int%    outNBElement,
                                                 cli::array<int>^  outInteger );
         
         static enum class RetCode CdlShortLine( int    startIdx,
                                                 int    endIdx,
                                                 cli::array<float>^ inOpen,
                                                 cli::array<float>^ inHigh,
                                                 cli::array<float>^ inLow,
                                                 cli::array<float>^ inClose,
                                                 [Out]int%    outBegIdx,
                                                 [Out]int%    outNBElement,
                                                 cli::array<int>^  outInteger );

         
         

         static int CdlSpinningTopLookback( void );

         





























         static enum class RetCode CdlSpinningTop( int    startIdx,
                                                   int    endIdx,
                                                   cli::array<double>^ inOpen,
                                                   cli::array<double>^ inHigh,
                                                   cli::array<double>^ inLow,
                                                   cli::array<double>^ inClose,
                                                   [Out]int%    outBegIdx,
                                                   [Out]int%    outNBElement,
                                                   cli::array<int>^  outInteger );
         
         static enum class RetCode CdlSpinningTop( int    startIdx,
                                                   int    endIdx,
                                                   cli::array<float>^ inOpen,
                                                   cli::array<float>^ inHigh,
                                                   cli::array<float>^ inLow,
                                                   cli::array<float>^ inClose,
                                                   [Out]int%    outBegIdx,
                                                   [Out]int%    outNBElement,
                                                   cli::array<int>^  outInteger );

         
         

         static int CdlStalledPatternLookback( void );

         





























         static enum class RetCode CdlStalledPattern( int    startIdx,
                                                      int    endIdx,
                                                      cli::array<double>^ inOpen,
                                                      cli::array<double>^ inHigh,
                                                      cli::array<double>^ inLow,
                                                      cli::array<double>^ inClose,
                                                      [Out]int%    outBegIdx,
                                                      [Out]int%    outNBElement,
                                                      cli::array<int>^  outInteger );
         
         static enum class RetCode CdlStalledPattern( int    startIdx,
                                                      int    endIdx,
                                                      cli::array<float>^ inOpen,
                                                      cli::array<float>^ inHigh,
                                                      cli::array<float>^ inLow,
                                                      cli::array<float>^ inClose,
                                                      [Out]int%    outBegIdx,
                                                      [Out]int%    outNBElement,
                                                      cli::array<int>^  outInteger );

         
         

         static int CdlStickSandwhichLookback( void );

         





























         static enum class RetCode CdlStickSandwhich( int    startIdx,
                                                      int    endIdx,
                                                      cli::array<double>^ inOpen,
                                                      cli::array<double>^ inHigh,
                                                      cli::array<double>^ inLow,
                                                      cli::array<double>^ inClose,
                                                      [Out]int%    outBegIdx,
                                                      [Out]int%    outNBElement,
                                                      cli::array<int>^  outInteger );
         
         static enum class RetCode CdlStickSandwhich( int    startIdx,
                                                      int    endIdx,
                                                      cli::array<float>^ inOpen,
                                                      cli::array<float>^ inHigh,
                                                      cli::array<float>^ inLow,
                                                      cli::array<float>^ inClose,
                                                      [Out]int%    outBegIdx,
                                                      [Out]int%    outNBElement,
                                                      cli::array<int>^  outInteger );

         
         

         static int CdlTakuriLookback( void );

         





























         static enum class RetCode CdlTakuri( int    startIdx,
                                              int    endIdx,
                                              cli::array<double>^ inOpen,
                                              cli::array<double>^ inHigh,
                                              cli::array<double>^ inLow,
                                              cli::array<double>^ inClose,
                                              [Out]int%    outBegIdx,
                                              [Out]int%    outNBElement,
                                              cli::array<int>^  outInteger );
         
         static enum class RetCode CdlTakuri( int    startIdx,
                                              int    endIdx,
                                              cli::array<float>^ inOpen,
                                              cli::array<float>^ inHigh,
                                              cli::array<float>^ inLow,
                                              cli::array<float>^ inClose,
                                              [Out]int%    outBegIdx,
                                              [Out]int%    outNBElement,
                                              cli::array<int>^  outInteger );

         
         

         static int CdlTasukiGapLookback( void );

         





























         static enum class RetCode CdlTasukiGap( int    startIdx,
                                                 int    endIdx,
                                                 cli::array<double>^ inOpen,
                                                 cli::array<double>^ inHigh,
                                                 cli::array<double>^ inLow,
                                                 cli::array<double>^ inClose,
                                                 [Out]int%    outBegIdx,
                                                 [Out]int%    outNBElement,
                                                 cli::array<int>^  outInteger );
         
         static enum class RetCode CdlTasukiGap( int    startIdx,
                                                 int    endIdx,
                                                 cli::array<float>^ inOpen,
                                                 cli::array<float>^ inHigh,
                                                 cli::array<float>^ inLow,
                                                 cli::array<float>^ inClose,
                                                 [Out]int%    outBegIdx,
                                                 [Out]int%    outNBElement,
                                                 cli::array<int>^  outInteger );

         
         

         static int CdlThrustingLookback( void );

         





























         static enum class RetCode CdlThrusting( int    startIdx,
                                                 int    endIdx,
                                                 cli::array<double>^ inOpen,
                                                 cli::array<double>^ inHigh,
                                                 cli::array<double>^ inLow,
                                                 cli::array<double>^ inClose,
                                                 [Out]int%    outBegIdx,
                                                 [Out]int%    outNBElement,
                                                 cli::array<int>^  outInteger );
         
         static enum class RetCode CdlThrusting( int    startIdx,
                                                 int    endIdx,
                                                 cli::array<float>^ inOpen,
                                                 cli::array<float>^ inHigh,
                                                 cli::array<float>^ inLow,
                                                 cli::array<float>^ inClose,
                                                 [Out]int%    outBegIdx,
                                                 [Out]int%    outNBElement,
                                                 cli::array<int>^  outInteger );

         
         

         static int CdlTristarLookback( void );

         





























         static enum class RetCode CdlTristar( int    startIdx,
                                               int    endIdx,
                                               cli::array<double>^ inOpen,
                                               cli::array<double>^ inHigh,
                                               cli::array<double>^ inLow,
                                               cli::array<double>^ inClose,
                                               [Out]int%    outBegIdx,
                                               [Out]int%    outNBElement,
                                               cli::array<int>^  outInteger );
         
         static enum class RetCode CdlTristar( int    startIdx,
                                               int    endIdx,
                                               cli::array<float>^ inOpen,
                                               cli::array<float>^ inHigh,
                                               cli::array<float>^ inLow,
                                               cli::array<float>^ inClose,
                                               [Out]int%    outBegIdx,
                                               [Out]int%    outNBElement,
                                               cli::array<int>^  outInteger );

         
         

         static int CdlUnique3RiverLookback( void );

         





























         static enum class RetCode CdlUnique3River( int    startIdx,
                                                    int    endIdx,
                                                    cli::array<double>^ inOpen,
                                                    cli::array<double>^ inHigh,
                                                    cli::array<double>^ inLow,
                                                    cli::array<double>^ inClose,
                                                    [Out]int%    outBegIdx,
                                                    [Out]int%    outNBElement,
                                                    cli::array<int>^  outInteger );
         
         static enum class RetCode CdlUnique3River( int    startIdx,
                                                    int    endIdx,
                                                    cli::array<float>^ inOpen,
                                                    cli::array<float>^ inHigh,
                                                    cli::array<float>^ inLow,
                                                    cli::array<float>^ inClose,
                                                    [Out]int%    outBegIdx,
                                                    [Out]int%    outNBElement,
                                                    cli::array<int>^  outInteger );

         
         

         static int CdlUpsideGap2CrowsLookback( void );

         





























         static enum class RetCode CdlUpsideGap2Crows( int    startIdx,
                                                       int    endIdx,
                                                       cli::array<double>^ inOpen,
                                                       cli::array<double>^ inHigh,
                                                       cli::array<double>^ inLow,
                                                       cli::array<double>^ inClose,
                                                       [Out]int%    outBegIdx,
                                                       [Out]int%    outNBElement,
                                                       cli::array<int>^  outInteger );
         
         static enum class RetCode CdlUpsideGap2Crows( int    startIdx,
                                                       int    endIdx,
                                                       cli::array<float>^ inOpen,
                                                       cli::array<float>^ inHigh,
                                                       cli::array<float>^ inLow,
                                                       cli::array<float>^ inClose,
                                                       [Out]int%    outBegIdx,
                                                       [Out]int%    outNBElement,
                                                       cli::array<int>^  outInteger );

         
         

         static int CdlXSideGap3MethodsLookback( void );

         





























         static enum class RetCode CdlXSideGap3Methods( int    startIdx,
                                                        int    endIdx,
                                                        cli::array<double>^ inOpen,
                                                        cli::array<double>^ inHigh,
                                                        cli::array<double>^ inLow,
                                                        cli::array<double>^ inClose,
                                                        [Out]int%    outBegIdx,
                                                        [Out]int%    outNBElement,
                                                        cli::array<int>^  outInteger );
         
         static enum class RetCode CdlXSideGap3Methods( int    startIdx,
                                                        int    endIdx,
                                                        cli::array<float>^ inOpen,
                                                        cli::array<float>^ inHigh,
                                                        cli::array<float>^ inLow,
                                                        cli::array<float>^ inClose,
                                                        [Out]int%    outBegIdx,
                                                        [Out]int%    outNBElement,
                                                        cli::array<int>^  outInteger );

         
         

         static int CeilLookback( void );

         




















         static enum class RetCode Ceil( int    startIdx,
                                         int    endIdx,
                                         cli::array<double>^ inReal,
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );
         
         static enum class RetCode Ceil( int    startIdx,
                                         int    endIdx,
                                         cli::array<float>^ inReal,
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );

         
         

         static int CmoLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         























         static enum class RetCode Cmo( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inReal,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Cmo( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inReal,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int CorrelLookback( int           optInTimePeriod );  /* From 1 to 100000 */

         


























         static enum class RetCode Correl( int    startIdx,
                                           int    endIdx,
                                           cli::array<double>^ inReal0,
                                           cli::array<double>^ inReal1,
                                           int           optInTimePeriod, /* From 1 to 100000 */
                                           [Out]int%    outBegIdx,
                                           [Out]int%    outNBElement,
                                           cli::array<double>^  outReal );
         
         static enum class RetCode Correl( int    startIdx,
                                           int    endIdx,
                                           cli::array<float>^ inReal0,
                                           cli::array<float>^ inReal1,
                                           int           optInTimePeriod, /* From 1 to 100000 */
                                           [Out]int%    outBegIdx,
                                           [Out]int%    outNBElement,
                                           cli::array<double>^  outReal );

         
         

         static int CosLookback( void );

         




















         static enum class RetCode Cos( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inReal,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Cos( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inReal,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int CoshLookback( void );

         




















         static enum class RetCode Cosh( int    startIdx,
                                         int    endIdx,
                                         cli::array<double>^ inReal,
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );
         
         static enum class RetCode Cosh( int    startIdx,
                                         int    endIdx,
                                         cli::array<float>^ inReal,
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );

         
         

         static int DemaLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         























         static enum class RetCode Dema( int    startIdx,
                                         int    endIdx,
                                         cli::array<double>^ inReal,
                                         int           optInTimePeriod, /* From 2 to 100000 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );
         
         static enum class RetCode Dema( int    startIdx,
                                         int    endIdx,
                                         cli::array<float>^ inReal,
                                         int           optInTimePeriod, /* From 2 to 100000 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );

         
         

         static int DivLookback( void );

         























         static enum class RetCode Div( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inReal0,
                                        cli::array<double>^ inReal1,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Div( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inReal0,
                                        cli::array<float>^ inReal1,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int DxLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         





























         static enum class RetCode Dx( int    startIdx,
                                       int    endIdx,
                                       cli::array<double>^ inHigh,
                                       cli::array<double>^ inLow,
                                       cli::array<double>^ inClose,
                                       int           optInTimePeriod, /* From 2 to 100000 */
                                       [Out]int%    outBegIdx,
                                       [Out]int%    outNBElement,
                                       cli::array<double>^  outReal );
         
         static enum class RetCode Dx( int    startIdx,
                                       int    endIdx,
                                       cli::array<float>^ inHigh,
                                       cli::array<float>^ inLow,
                                       cli::array<float>^ inClose,
                                       int           optInTimePeriod, /* From 2 to 100000 */
                                       [Out]int%    outBegIdx,
                                       [Out]int%    outNBElement,
                                       cli::array<double>^  outReal );

         
         

         static int EmaLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         























         static enum class RetCode Ema( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inReal,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Ema( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inReal,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int ExpLookback( void );

         




















         static enum class RetCode Exp( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inReal,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Exp( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inReal,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int FloorLookback( void );

         




















         static enum class RetCode Floor( int    startIdx,
                                          int    endIdx,
                                          cli::array<double>^ inReal,
                                          [Out]int%    outBegIdx,
                                          [Out]int%    outNBElement,
                                          cli::array<double>^  outReal );
         
         static enum class RetCode Floor( int    startIdx,
                                          int    endIdx,
                                          cli::array<float>^ inReal,
                                          [Out]int%    outBegIdx,
                                          [Out]int%    outNBElement,
                                          cli::array<double>^  outReal );

         
         

         static int HtDcPeriodLookback( void );

         




















         static enum class RetCode HtDcPeriod( int    startIdx,
                                               int    endIdx,
                                               cli::array<double>^ inReal,
                                               [Out]int%    outBegIdx,
                                               [Out]int%    outNBElement,
                                               cli::array<double>^  outReal );
         
         static enum class RetCode HtDcPeriod( int    startIdx,
                                               int    endIdx,
                                               cli::array<float>^ inReal,
                                               [Out]int%    outBegIdx,
                                               [Out]int%    outNBElement,
                                               cli::array<double>^  outReal );

         
         

         static int HtDcPhaseLookback( void );

         




















         static enum class RetCode HtDcPhase( int    startIdx,
                                              int    endIdx,
                                              cli::array<double>^ inReal,
                                              [Out]int%    outBegIdx,
                                              [Out]int%    outNBElement,
                                              cli::array<double>^  outReal );
         
         static enum class RetCode HtDcPhase( int    startIdx,
                                              int    endIdx,
                                              cli::array<float>^ inReal,
                                              [Out]int%    outBegIdx,
                                              [Out]int%    outNBElement,
                                              cli::array<double>^  outReal );

         
         

         static int HtPhasorLookback( void );

         























         static enum class RetCode HtPhasor( int    startIdx,
                                             int    endIdx,
                                             cli::array<double>^ inReal,
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<double>^  outInPhase,
                                             cli::array<double>^  outQuadrature );
         
         static enum class RetCode HtPhasor( int    startIdx,
                                             int    endIdx,
                                             cli::array<float>^ inReal,
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<double>^  outInPhase,
                                             cli::array<double>^  outQuadrature );

         
         

         static int HtSineLookback( void );

         























         static enum class RetCode HtSine( int    startIdx,
                                           int    endIdx,
                                           cli::array<double>^ inReal,
                                           [Out]int%    outBegIdx,
                                           [Out]int%    outNBElement,
                                           cli::array<double>^  outSine,
                                           cli::array<double>^  outLeadSine );
         
         static enum class RetCode HtSine( int    startIdx,
                                           int    endIdx,
                                           cli::array<float>^ inReal,
                                           [Out]int%    outBegIdx,
                                           [Out]int%    outNBElement,
                                           cli::array<double>^  outSine,
                                           cli::array<double>^  outLeadSine );

         
         

         static int HtTrendlineLookback( void );

         




















         static enum class RetCode HtTrendline( int    startIdx,
                                                int    endIdx,
                                                cli::array<double>^ inReal,
                                                [Out]int%    outBegIdx,
                                                [Out]int%    outNBElement,
                                                cli::array<double>^  outReal );
         
         static enum class RetCode HtTrendline( int    startIdx,
                                                int    endIdx,
                                                cli::array<float>^ inReal,
                                                [Out]int%    outBegIdx,
                                                [Out]int%    outNBElement,
                                                cli::array<double>^  outReal );

         
         

         static int HtTrendModeLookback( void );

         




















         static enum class RetCode HtTrendMode( int    startIdx,
                                                int    endIdx,
                                                cli::array<double>^ inReal,
                                                [Out]int%    outBegIdx,
                                                [Out]int%    outNBElement,
                                                cli::array<int>^  outInteger );
         
         static enum class RetCode HtTrendMode( int    startIdx,
                                                int    endIdx,
                                                cli::array<float>^ inReal,
                                                [Out]int%    outBegIdx,
                                                [Out]int%    outNBElement,
                                                cli::array<int>^  outInteger );

         
         

         static int KamaLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         























         static enum class RetCode Kama( int    startIdx,
                                         int    endIdx,
                                         cli::array<double>^ inReal,
                                         int           optInTimePeriod, /* From 2 to 100000 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );
         
         static enum class RetCode Kama( int    startIdx,
                                         int    endIdx,
                                         cli::array<float>^ inReal,
                                         int           optInTimePeriod, /* From 2 to 100000 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );

         
         

         static int LinearRegLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         























         static enum class RetCode LinearReg( int    startIdx,
                                              int    endIdx,
                                              cli::array<double>^ inReal,
                                              int           optInTimePeriod, /* From 2 to 100000 */
                                              [Out]int%    outBegIdx,
                                              [Out]int%    outNBElement,
                                              cli::array<double>^  outReal );
         
         static enum class RetCode LinearReg( int    startIdx,
                                              int    endIdx,
                                              cli::array<float>^ inReal,
                                              int           optInTimePeriod, /* From 2 to 100000 */
                                              [Out]int%    outBegIdx,
                                              [Out]int%    outNBElement,
                                              cli::array<double>^  outReal );

         
         

         static int LinearRegAngleLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         























         static enum class RetCode LinearRegAngle( int    startIdx,
                                                   int    endIdx,
                                                   cli::array<double>^ inReal,
                                                   int           optInTimePeriod, /* From 2 to 100000 */
                                                   [Out]int%    outBegIdx,
                                                   [Out]int%    outNBElement,
                                                   cli::array<double>^  outReal );
         
         static enum class RetCode LinearRegAngle( int    startIdx,
                                                   int    endIdx,
                                                   cli::array<float>^ inReal,
                                                   int           optInTimePeriod, /* From 2 to 100000 */
                                                   [Out]int%    outBegIdx,
                                                   [Out]int%    outNBElement,
                                                   cli::array<double>^  outReal );

         
         

         static int LinearRegInterceptLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         























         static enum class RetCode LinearRegIntercept( int    startIdx,
                                                       int    endIdx,
                                                       cli::array<double>^ inReal,
                                                       int           optInTimePeriod, /* From 2 to 100000 */
                                                       [Out]int%    outBegIdx,
                                                       [Out]int%    outNBElement,
                                                       cli::array<double>^  outReal );
         
         static enum class RetCode LinearRegIntercept( int    startIdx,
                                                       int    endIdx,
                                                       cli::array<float>^ inReal,
                                                       int           optInTimePeriod, /* From 2 to 100000 */
                                                       [Out]int%    outBegIdx,
                                                       [Out]int%    outNBElement,
                                                       cli::array<double>^  outReal );

         
         

         static int LinearRegSlopeLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         























         static enum class RetCode LinearRegSlope( int    startIdx,
                                                   int    endIdx,
                                                   cli::array<double>^ inReal,
                                                   int           optInTimePeriod, /* From 2 to 100000 */
                                                   [Out]int%    outBegIdx,
                                                   [Out]int%    outNBElement,
                                                   cli::array<double>^  outReal );
         
         static enum class RetCode LinearRegSlope( int    startIdx,
                                                   int    endIdx,
                                                   cli::array<float>^ inReal,
                                                   int           optInTimePeriod, /* From 2 to 100000 */
                                                   [Out]int%    outBegIdx,
                                                   [Out]int%    outNBElement,
                                                   cli::array<double>^  outReal );

         
         

         static int LnLookback( void );

         




















         static enum class RetCode Ln( int    startIdx,
                                       int    endIdx,
                                       cli::array<double>^ inReal,
                                       [Out]int%    outBegIdx,
                                       [Out]int%    outNBElement,
                                       cli::array<double>^  outReal );
         
         static enum class RetCode Ln( int    startIdx,
                                       int    endIdx,
                                       cli::array<float>^ inReal,
                                       [Out]int%    outBegIdx,
                                       [Out]int%    outNBElement,
                                       cli::array<double>^  outReal );

         
         

         static int Log10Lookback( void );

         




















         static enum class RetCode Log10( int    startIdx,
                                          int    endIdx,
                                          cli::array<double>^ inReal,
                                          [Out]int%    outBegIdx,
                                          [Out]int%    outNBElement,
                                          cli::array<double>^  outReal );
         
         static enum class RetCode Log10( int    startIdx,
                                          int    endIdx,
                                          cli::array<float>^ inReal,
                                          [Out]int%    outBegIdx,
                                          [Out]int%    outNBElement,
                                          cli::array<double>^  outReal );

         
         

         static int MovingAverageLookback( int           optInTimePeriod, /* From 1 to 100000 */
                                         MAType        optInMAType ); 
         


























         static enum class RetCode MovingAverage( int    startIdx,
                                                  int    endIdx,
                                                  cli::array<double>^ inReal,
                                                  int           optInTimePeriod, /* From 1 to 100000 */
                                                  MAType        optInMAType,
                                                  [Out]int%    outBegIdx,
                                                  [Out]int%    outNBElement,
                                                  cli::array<double>^  outReal );
         
         static enum class RetCode MovingAverage( int    startIdx,
                                                  int    endIdx,
                                                  cli::array<float>^ inReal,
                                                  int           optInTimePeriod, /* From 1 to 100000 */
                                                  MAType        optInMAType,
                                                  [Out]int%    outBegIdx,
                                                  [Out]int%    outNBElement,
                                                  cli::array<double>^  outReal );

         
         

         static int MacdLookback( int           optInFastPeriod, /* From 2 to 100000 */
                                int           optInSlowPeriod, /* From 2 to 100000 */
                                int           optInSignalPeriod );  /* From 1 to 100000 */

         



































         static enum class RetCode Macd( int    startIdx,
                                         int    endIdx,
                                         cli::array<double>^ inReal,
                                         int           optInFastPeriod, /* From 2 to 100000 */
                                         int           optInSlowPeriod, /* From 2 to 100000 */
                                         int           optInSignalPeriod, /* From 1 to 100000 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outMACD,
                                         cli::array<double>^  outMACDSignal,
                                         cli::array<double>^  outMACDHist );
         
         static enum class RetCode Macd( int    startIdx,
                                         int    endIdx,
                                         cli::array<float>^ inReal,
                                         int           optInFastPeriod, /* From 2 to 100000 */
                                         int           optInSlowPeriod, /* From 2 to 100000 */
                                         int           optInSignalPeriod, /* From 1 to 100000 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outMACD,
                                         cli::array<double>^  outMACDSignal,
                                         cli::array<double>^  outMACDHist );

         
         

         static int MacdExtLookback( int           optInFastPeriod, /* From 2 to 100000 */
                                   MAType        optInFastMAType,
                                   int           optInSlowPeriod, /* From 2 to 100000 */
                                   MAType        optInSlowMAType,
                                   int           optInSignalPeriod, /* From 1 to 100000 */
                                   MAType        optInSignalMAType ); 
         












































         static enum class RetCode MacdExt( int    startIdx,
                                            int    endIdx,
                                            cli::array<double>^ inReal,
                                            int           optInFastPeriod, /* From 2 to 100000 */
                                            MAType        optInFastMAType,
                                            int           optInSlowPeriod, /* From 2 to 100000 */
                                            MAType        optInSlowMAType,
                                            int           optInSignalPeriod, /* From 1 to 100000 */
                                            MAType        optInSignalMAType,
                                            [Out]int%    outBegIdx,
                                            [Out]int%    outNBElement,
                                            cli::array<double>^  outMACD,
                                            cli::array<double>^  outMACDSignal,
                                            cli::array<double>^  outMACDHist );
         
         static enum class RetCode MacdExt( int    startIdx,
                                            int    endIdx,
                                            cli::array<float>^ inReal,
                                            int           optInFastPeriod, /* From 2 to 100000 */
                                            MAType        optInFastMAType,
                                            int           optInSlowPeriod, /* From 2 to 100000 */
                                            MAType        optInSlowMAType,
                                            int           optInSignalPeriod, /* From 1 to 100000 */
                                            MAType        optInSignalMAType,
                                            [Out]int%    outBegIdx,
                                            [Out]int%    outNBElement,
                                            cli::array<double>^  outMACD,
                                            cli::array<double>^  outMACDSignal,
                                            cli::array<double>^  outMACDHist );

         
         

         static int MacdFixLookback( int           optInSignalPeriod );  /* From 1 to 100000 */

         





























         static enum class RetCode MacdFix( int    startIdx,
                                            int    endIdx,
                                            cli::array<double>^ inReal,
                                            int           optInSignalPeriod, /* From 1 to 100000 */
                                            [Out]int%    outBegIdx,
                                            [Out]int%    outNBElement,
                                            cli::array<double>^  outMACD,
                                            cli::array<double>^  outMACDSignal,
                                            cli::array<double>^  outMACDHist );
         
         static enum class RetCode MacdFix( int    startIdx,
                                            int    endIdx,
                                            cli::array<float>^ inReal,
                                            int           optInSignalPeriod, /* From 1 to 100000 */
                                            [Out]int%    outBegIdx,
                                            [Out]int%    outNBElement,
                                            cli::array<double>^  outMACD,
                                            cli::array<double>^  outMACDSignal,
                                            cli::array<double>^  outMACDHist );

         
         

         static int MamaLookback( double        optInFastLimit, /* From 0.01 to 0.99 */
                                double        optInSlowLimit );  /* From 0.01 to 0.99 */

         





























         static enum class RetCode Mama( int    startIdx,
                                         int    endIdx,
                                         cli::array<double>^ inReal,
                                         double        optInFastLimit, /* From 0.01 to 0.99 */
                                         double        optInSlowLimit, /* From 0.01 to 0.99 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outMAMA,
                                         cli::array<double>^  outFAMA );
         
         static enum class RetCode Mama( int    startIdx,
                                         int    endIdx,
                                         cli::array<float>^ inReal,
                                         double        optInFastLimit, /* From 0.01 to 0.99 */
                                         double        optInSlowLimit, /* From 0.01 to 0.99 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outMAMA,
                                         cli::array<double>^  outFAMA );

         
         

         static int MovingAverageVariablePeriodLookback( int           optInMinPeriod, /* From 2 to 100000 */
                                                       int           optInMaxPeriod, /* From 2 to 100000 */
                                                       MAType        optInMAType ); 
         
































         static enum class RetCode MovingAverageVariablePeriod( int    startIdx,
                                                                int    endIdx,
                                                                cli::array<double>^ inReal,
                                                                cli::array<double>^ inPeriods,
                                                                int           optInMinPeriod, /* From 2 to 100000 */
                                                                int           optInMaxPeriod, /* From 2 to 100000 */
                                                                MAType        optInMAType,
                                                                [Out]int%    outBegIdx,
                                                                [Out]int%    outNBElement,
                                                                cli::array<double>^  outReal );
         
         static enum class RetCode MovingAverageVariablePeriod( int    startIdx,
                                                                int    endIdx,
                                                                cli::array<float>^ inReal,
                                                                cli::array<float>^ inPeriods,
                                                                int           optInMinPeriod, /* From 2 to 100000 */
                                                                int           optInMaxPeriod, /* From 2 to 100000 */
                                                                MAType        optInMAType,
                                                                [Out]int%    outBegIdx,
                                                                [Out]int%    outNBElement,
                                                                cli::array<double>^  outReal );

         
         

         static int MaxLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         























         static enum class RetCode Max( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inReal,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Max( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inReal,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int MaxIndexLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         























         static enum class RetCode MaxIndex( int    startIdx,
                                             int    endIdx,
                                             cli::array<double>^ inReal,
                                             int           optInTimePeriod, /* From 2 to 100000 */
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<int>^  outInteger );
         
         static enum class RetCode MaxIndex( int    startIdx,
                                             int    endIdx,
                                             cli::array<float>^ inReal,
                                             int           optInTimePeriod, /* From 2 to 100000 */
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<int>^  outInteger );

         
         

         static int MedPriceLookback( void );

         























         static enum class RetCode MedPrice( int    startIdx,
                                             int    endIdx,
                                             cli::array<double>^ inHigh,
                                             cli::array<double>^ inLow,
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<double>^  outReal );
         
         static enum class RetCode MedPrice( int    startIdx,
                                             int    endIdx,
                                             cli::array<float>^ inHigh,
                                             cli::array<float>^ inLow,
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<double>^  outReal );

         
         

         static int MfiLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         
































         static enum class RetCode Mfi( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inHigh,
                                        cli::array<double>^ inLow,
                                        cli::array<double>^ inClose,
                                        cli::array<double>^ inVolume,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Mfi( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inHigh,
                                        cli::array<float>^ inLow,
                                        cli::array<float>^ inClose,
                                        cli::array<float>^ inVolume,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int MidPointLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         























         static enum class RetCode MidPoint( int    startIdx,
                                             int    endIdx,
                                             cli::array<double>^ inReal,
                                             int           optInTimePeriod, /* From 2 to 100000 */
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<double>^  outReal );
         
         static enum class RetCode MidPoint( int    startIdx,
                                             int    endIdx,
                                             cli::array<float>^ inReal,
                                             int           optInTimePeriod, /* From 2 to 100000 */
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<double>^  outReal );

         
         

         static int MidPriceLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         


























         static enum class RetCode MidPrice( int    startIdx,
                                             int    endIdx,
                                             cli::array<double>^ inHigh,
                                             cli::array<double>^ inLow,
                                             int           optInTimePeriod, /* From 2 to 100000 */
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<double>^  outReal );
         
         static enum class RetCode MidPrice( int    startIdx,
                                             int    endIdx,
                                             cli::array<float>^ inHigh,
                                             cli::array<float>^ inLow,
                                             int           optInTimePeriod, /* From 2 to 100000 */
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<double>^  outReal );

         
         

         static int MinLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         























         static enum class RetCode Min( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inReal,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Min( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inReal,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int MinIndexLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         























         static enum class RetCode MinIndex( int    startIdx,
                                             int    endIdx,
                                             cli::array<double>^ inReal,
                                             int           optInTimePeriod, /* From 2 to 100000 */
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<int>^  outInteger );
         
         static enum class RetCode MinIndex( int    startIdx,
                                             int    endIdx,
                                             cli::array<float>^ inReal,
                                             int           optInTimePeriod, /* From 2 to 100000 */
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<int>^  outInteger );

         
         

         static int MinMaxLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         


























         static enum class RetCode MinMax( int    startIdx,
                                           int    endIdx,
                                           cli::array<double>^ inReal,
                                           int           optInTimePeriod, /* From 2 to 100000 */
                                           [Out]int%    outBegIdx,
                                           [Out]int%    outNBElement,
                                           cli::array<double>^  outMin,
                                           cli::array<double>^  outMax );
         
         static enum class RetCode MinMax( int    startIdx,
                                           int    endIdx,
                                           cli::array<float>^ inReal,
                                           int           optInTimePeriod, /* From 2 to 100000 */
                                           [Out]int%    outBegIdx,
                                           [Out]int%    outNBElement,
                                           cli::array<double>^  outMin,
                                           cli::array<double>^  outMax );

         
         

         static int MinMaxIndexLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         


























         static enum class RetCode MinMaxIndex( int    startIdx,
                                                int    endIdx,
                                                cli::array<double>^ inReal,
                                                int           optInTimePeriod, /* From 2 to 100000 */
                                                [Out]int%    outBegIdx,
                                                [Out]int%    outNBElement,
                                                cli::array<int>^  outMinIdx,
                                                cli::array<int>^  outMaxIdx );
         
         static enum class RetCode MinMaxIndex( int    startIdx,
                                                int    endIdx,
                                                cli::array<float>^ inReal,
                                                int           optInTimePeriod, /* From 2 to 100000 */
                                                [Out]int%    outBegIdx,
                                                [Out]int%    outNBElement,
                                                cli::array<int>^  outMinIdx,
                                                cli::array<int>^  outMaxIdx );

         
         

         static int MinusDILookback( int           optInTimePeriod );  /* From 1 to 100000 */

         





























         static enum class RetCode MinusDI( int    startIdx,
                                            int    endIdx,
                                            cli::array<double>^ inHigh,
                                            cli::array<double>^ inLow,
                                            cli::array<double>^ inClose,
                                            int           optInTimePeriod, /* From 1 to 100000 */
                                            [Out]int%    outBegIdx,
                                            [Out]int%    outNBElement,
                                            cli::array<double>^  outReal );
         
         static enum class RetCode MinusDI( int    startIdx,
                                            int    endIdx,
                                            cli::array<float>^ inHigh,
                                            cli::array<float>^ inLow,
                                            cli::array<float>^ inClose,
                                            int           optInTimePeriod, /* From 1 to 100000 */
                                            [Out]int%    outBegIdx,
                                            [Out]int%    outNBElement,
                                            cli::array<double>^  outReal );

         
         

         static int MinusDMLookback( int           optInTimePeriod );  /* From 1 to 100000 */

         


























         static enum class RetCode MinusDM( int    startIdx,
                                            int    endIdx,
                                            cli::array<double>^ inHigh,
                                            cli::array<double>^ inLow,
                                            int           optInTimePeriod, /* From 1 to 100000 */
                                            [Out]int%    outBegIdx,
                                            [Out]int%    outNBElement,
                                            cli::array<double>^  outReal );
         
         static enum class RetCode MinusDM( int    startIdx,
                                            int    endIdx,
                                            cli::array<float>^ inHigh,
                                            cli::array<float>^ inLow,
                                            int           optInTimePeriod, /* From 1 to 100000 */
                                            [Out]int%    outBegIdx,
                                            [Out]int%    outNBElement,
                                            cli::array<double>^  outReal );

         
         

         static int MomLookback( int           optInTimePeriod );  /* From 1 to 100000 */

         























         static enum class RetCode Mom( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inReal,
                                        int           optInTimePeriod, /* From 1 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Mom( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inReal,
                                        int           optInTimePeriod, /* From 1 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int MultLookback( void );

         























         static enum class RetCode Mult( int    startIdx,
                                         int    endIdx,
                                         cli::array<double>^ inReal0,
                                         cli::array<double>^ inReal1,
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );
         
         static enum class RetCode Mult( int    startIdx,
                                         int    endIdx,
                                         cli::array<float>^ inReal0,
                                         cli::array<float>^ inReal1,
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );

         
         

         static int NatrLookback( int           optInTimePeriod );  /* From 1 to 100000 */

         





























         static enum class RetCode Natr( int    startIdx,
                                         int    endIdx,
                                         cli::array<double>^ inHigh,
                                         cli::array<double>^ inLow,
                                         cli::array<double>^ inClose,
                                         int           optInTimePeriod, /* From 1 to 100000 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );
         
         static enum class RetCode Natr( int    startIdx,
                                         int    endIdx,
                                         cli::array<float>^ inHigh,
                                         cli::array<float>^ inLow,
                                         cli::array<float>^ inClose,
                                         int           optInTimePeriod, /* From 1 to 100000 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );

         
         

         static int ObvLookback( void );

         























         static enum class RetCode Obv( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inReal,
                                        cli::array<double>^ inVolume,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Obv( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inReal,
                                        cli::array<float>^ inVolume,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int PlusDILookback( int           optInTimePeriod );  /* From 1 to 100000 */

         





























         static enum class RetCode PlusDI( int    startIdx,
                                           int    endIdx,
                                           cli::array<double>^ inHigh,
                                           cli::array<double>^ inLow,
                                           cli::array<double>^ inClose,
                                           int           optInTimePeriod, /* From 1 to 100000 */
                                           [Out]int%    outBegIdx,
                                           [Out]int%    outNBElement,
                                           cli::array<double>^  outReal );
         
         static enum class RetCode PlusDI( int    startIdx,
                                           int    endIdx,
                                           cli::array<float>^ inHigh,
                                           cli::array<float>^ inLow,
                                           cli::array<float>^ inClose,
                                           int           optInTimePeriod, /* From 1 to 100000 */
                                           [Out]int%    outBegIdx,
                                           [Out]int%    outNBElement,
                                           cli::array<double>^  outReal );

         
         

         static int PlusDMLookback( int           optInTimePeriod );  /* From 1 to 100000 */

         


























         static enum class RetCode PlusDM( int    startIdx,
                                           int    endIdx,
                                           cli::array<double>^ inHigh,
                                           cli::array<double>^ inLow,
                                           int           optInTimePeriod, /* From 1 to 100000 */
                                           [Out]int%    outBegIdx,
                                           [Out]int%    outNBElement,
                                           cli::array<double>^  outReal );
         
         static enum class RetCode PlusDM( int    startIdx,
                                           int    endIdx,
                                           cli::array<float>^ inHigh,
                                           cli::array<float>^ inLow,
                                           int           optInTimePeriod, /* From 1 to 100000 */
                                           [Out]int%    outBegIdx,
                                           [Out]int%    outNBElement,
                                           cli::array<double>^  outReal );

         
         

         static int PpoLookback( int           optInFastPeriod, /* From 2 to 100000 */
                               int           optInSlowPeriod, /* From 2 to 100000 */
                               MAType        optInMAType ); 
         





























         static enum class RetCode Ppo( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inReal,
                                        int           optInFastPeriod, /* From 2 to 100000 */
                                        int           optInSlowPeriod, /* From 2 to 100000 */
                                        MAType        optInMAType,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Ppo( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inReal,
                                        int           optInFastPeriod, /* From 2 to 100000 */
                                        int           optInSlowPeriod, /* From 2 to 100000 */
                                        MAType        optInMAType,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int RocLookback( int           optInTimePeriod );  /* From 1 to 100000 */

         























         static enum class RetCode Roc( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inReal,
                                        int           optInTimePeriod, /* From 1 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Roc( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inReal,
                                        int           optInTimePeriod, /* From 1 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int RocPLookback( int           optInTimePeriod );  /* From 1 to 100000 */

         























         static enum class RetCode RocP( int    startIdx,
                                         int    endIdx,
                                         cli::array<double>^ inReal,
                                         int           optInTimePeriod, /* From 1 to 100000 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );
         
         static enum class RetCode RocP( int    startIdx,
                                         int    endIdx,
                                         cli::array<float>^ inReal,
                                         int           optInTimePeriod, /* From 1 to 100000 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );

         
         

         static int RocRLookback( int           optInTimePeriod );  /* From 1 to 100000 */

         























         static enum class RetCode RocR( int    startIdx,
                                         int    endIdx,
                                         cli::array<double>^ inReal,
                                         int           optInTimePeriod, /* From 1 to 100000 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );
         
         static enum class RetCode RocR( int    startIdx,
                                         int    endIdx,
                                         cli::array<float>^ inReal,
                                         int           optInTimePeriod, /* From 1 to 100000 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );

         
         

         static int RocR100Lookback( int           optInTimePeriod );  /* From 1 to 100000 */

         























         static enum class RetCode RocR100( int    startIdx,
                                            int    endIdx,
                                            cli::array<double>^ inReal,
                                            int           optInTimePeriod, /* From 1 to 100000 */
                                            [Out]int%    outBegIdx,
                                            [Out]int%    outNBElement,
                                            cli::array<double>^  outReal );
         
         static enum class RetCode RocR100( int    startIdx,
                                            int    endIdx,
                                            cli::array<float>^ inReal,
                                            int           optInTimePeriod, /* From 1 to 100000 */
                                            [Out]int%    outBegIdx,
                                            [Out]int%    outNBElement,
                                            cli::array<double>^  outReal );

         
         

         static int RsiLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         























         static enum class RetCode Rsi( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inReal,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Rsi( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inReal,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int SarLookback( double        optInAcceleration, /* From 0 to TA_REAL_MAX */
                               double        optInMaximum );  /* From 0 to TA_REAL_MAX */

         





























         static enum class RetCode Sar( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inHigh,
                                        cli::array<double>^ inLow,
                                        double        optInAcceleration, /* From 0 to TA_REAL_MAX */
                                        double        optInMaximum, /* From 0 to TA_REAL_MAX */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Sar( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inHigh,
                                        cli::array<float>^ inLow,
                                        double        optInAcceleration, /* From 0 to TA_REAL_MAX */
                                        double        optInMaximum, /* From 0 to TA_REAL_MAX */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int SarExtLookback( double        optInStartValue, /* From TA_REAL_MIN to TA_REAL_MAX */
                                  double        optInOffsetOnReverse, /* From 0 to TA_REAL_MAX */
                                  double        optInAccelerationInitLong, /* From 0 to TA_REAL_MAX */
                                  double        optInAccelerationLong, /* From 0 to TA_REAL_MAX */
                                  double        optInAccelerationMaxLong, /* From 0 to TA_REAL_MAX */
                                  double        optInAccelerationInitShort, /* From 0 to TA_REAL_MAX */
                                  double        optInAccelerationShort, /* From 0 to TA_REAL_MAX */
                                  double        optInAccelerationMaxShort );  /* From 0 to TA_REAL_MAX */

         















































         static enum class RetCode SarExt( int    startIdx,
                                           int    endIdx,
                                           cli::array<double>^ inHigh,
                                           cli::array<double>^ inLow,
                                           double        optInStartValue, /* From TA_REAL_MIN to TA_REAL_MAX */
                                           double        optInOffsetOnReverse, /* From 0 to TA_REAL_MAX */
                                           double        optInAccelerationInitLong, /* From 0 to TA_REAL_MAX */
                                           double        optInAccelerationLong, /* From 0 to TA_REAL_MAX */
                                           double        optInAccelerationMaxLong, /* From 0 to TA_REAL_MAX */
                                           double        optInAccelerationInitShort, /* From 0 to TA_REAL_MAX */
                                           double        optInAccelerationShort, /* From 0 to TA_REAL_MAX */
                                           double        optInAccelerationMaxShort, /* From 0 to TA_REAL_MAX */
                                           [Out]int%    outBegIdx,
                                           [Out]int%    outNBElement,
                                           cli::array<double>^  outReal );
         
         static enum class RetCode SarExt( int    startIdx,
                                           int    endIdx,
                                           cli::array<float>^ inHigh,
                                           cli::array<float>^ inLow,
                                           double        optInStartValue, /* From TA_REAL_MIN to TA_REAL_MAX */
                                           double        optInOffsetOnReverse, /* From 0 to TA_REAL_MAX */
                                           double        optInAccelerationInitLong, /* From 0 to TA_REAL_MAX */
                                           double        optInAccelerationLong, /* From 0 to TA_REAL_MAX */
                                           double        optInAccelerationMaxLong, /* From 0 to TA_REAL_MAX */
                                           double        optInAccelerationInitShort, /* From 0 to TA_REAL_MAX */
                                           double        optInAccelerationShort, /* From 0 to TA_REAL_MAX */
                                           double        optInAccelerationMaxShort, /* From 0 to TA_REAL_MAX */
                                           [Out]int%    outBegIdx,
                                           [Out]int%    outNBElement,
                                           cli::array<double>^  outReal );

         
         

         static int SinLookback( void );

         




















         static enum class RetCode Sin( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inReal,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Sin( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inReal,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int SinhLookback( void );

         




















         static enum class RetCode Sinh( int    startIdx,
                                         int    endIdx,
                                         cli::array<double>^ inReal,
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );
         
         static enum class RetCode Sinh( int    startIdx,
                                         int    endIdx,
                                         cli::array<float>^ inReal,
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );

         
         

         static int SmaLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         























         static enum class RetCode Sma( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inReal,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Sma( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inReal,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int SqrtLookback( void );

         




















         static enum class RetCode Sqrt( int    startIdx,
                                         int    endIdx,
                                         cli::array<double>^ inReal,
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );
         
         static enum class RetCode Sqrt( int    startIdx,
                                         int    endIdx,
                                         cli::array<float>^ inReal,
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );

         
         

         static int StdDevLookback( int           optInTimePeriod, /* From 2 to 100000 */
                                  double        optInNbDev );  /* From TA_REAL_MIN to TA_REAL_MAX */

         


























         static enum class RetCode StdDev( int    startIdx,
                                           int    endIdx,
                                           cli::array<double>^ inReal,
                                           int           optInTimePeriod, /* From 2 to 100000 */
                                           double        optInNbDev, /* From TA_REAL_MIN to TA_REAL_MAX */
                                           [Out]int%    outBegIdx,
                                           [Out]int%    outNBElement,
                                           cli::array<double>^  outReal );
         
         static enum class RetCode StdDev( int    startIdx,
                                           int    endIdx,
                                           cli::array<float>^ inReal,
                                           int           optInTimePeriod, /* From 2 to 100000 */
                                           double        optInNbDev, /* From TA_REAL_MIN to TA_REAL_MAX */
                                           [Out]int%    outBegIdx,
                                           [Out]int%    outNBElement,
                                           cli::array<double>^  outReal );

         
         

         static int StochLookback( int           optInFastK_Period, /* From 1 to 100000 */
                                 int           optInSlowK_Period, /* From 1 to 100000 */
                                 MAType        optInSlowK_MAType,
                                 int           optInSlowD_Period, /* From 1 to 100000 */
                                 MAType        optInSlowD_MAType ); 
         












































         static enum class RetCode Stoch( int    startIdx,
                                          int    endIdx,
                                          cli::array<double>^ inHigh,
                                          cli::array<double>^ inLow,
                                          cli::array<double>^ inClose,
                                          int           optInFastK_Period, /* From 1 to 100000 */
                                          int           optInSlowK_Period, /* From 1 to 100000 */
                                          MAType        optInSlowK_MAType,
                                          int           optInSlowD_Period, /* From 1 to 100000 */
                                          MAType        optInSlowD_MAType,
                                          [Out]int%    outBegIdx,
                                          [Out]int%    outNBElement,
                                          cli::array<double>^  outSlowK,
                                          cli::array<double>^  outSlowD );
         
         static enum class RetCode Stoch( int    startIdx,
                                          int    endIdx,
                                          cli::array<float>^ inHigh,
                                          cli::array<float>^ inLow,
                                          cli::array<float>^ inClose,
                                          int           optInFastK_Period, /* From 1 to 100000 */
                                          int           optInSlowK_Period, /* From 1 to 100000 */
                                          MAType        optInSlowK_MAType,
                                          int           optInSlowD_Period, /* From 1 to 100000 */
                                          MAType        optInSlowD_MAType,
                                          [Out]int%    outBegIdx,
                                          [Out]int%    outNBElement,
                                          cli::array<double>^  outSlowK,
                                          cli::array<double>^  outSlowD );

         
         

         static int StochFLookback( int           optInFastK_Period, /* From 1 to 100000 */
                                  int           optInFastD_Period, /* From 1 to 100000 */
                                  MAType        optInFastD_MAType ); 
         






































         static enum class RetCode StochF( int    startIdx,
                                           int    endIdx,
                                           cli::array<double>^ inHigh,
                                           cli::array<double>^ inLow,
                                           cli::array<double>^ inClose,
                                           int           optInFastK_Period, /* From 1 to 100000 */
                                           int           optInFastD_Period, /* From 1 to 100000 */
                                           MAType        optInFastD_MAType,
                                           [Out]int%    outBegIdx,
                                           [Out]int%    outNBElement,
                                           cli::array<double>^  outFastK,
                                           cli::array<double>^  outFastD );
         
         static enum class RetCode StochF( int    startIdx,
                                           int    endIdx,
                                           cli::array<float>^ inHigh,
                                           cli::array<float>^ inLow,
                                           cli::array<float>^ inClose,
                                           int           optInFastK_Period, /* From 1 to 100000 */
                                           int           optInFastD_Period, /* From 1 to 100000 */
                                           MAType        optInFastD_MAType,
                                           [Out]int%    outBegIdx,
                                           [Out]int%    outNBElement,
                                           cli::array<double>^  outFastK,
                                           cli::array<double>^  outFastD );

         
         

         static int StochRsiLookback( int           optInTimePeriod, /* From 2 to 100000 */
                                    int           optInFastK_Period, /* From 1 to 100000 */
                                    int           optInFastD_Period, /* From 1 to 100000 */
                                    MAType        optInFastD_MAType ); 
         



































         static enum class RetCode StochRsi( int    startIdx,
                                             int    endIdx,
                                             cli::array<double>^ inReal,
                                             int           optInTimePeriod, /* From 2 to 100000 */
                                             int           optInFastK_Period, /* From 1 to 100000 */
                                             int           optInFastD_Period, /* From 1 to 100000 */
                                             MAType        optInFastD_MAType,
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<double>^  outFastK,
                                             cli::array<double>^  outFastD );
         
         static enum class RetCode StochRsi( int    startIdx,
                                             int    endIdx,
                                             cli::array<float>^ inReal,
                                             int           optInTimePeriod, /* From 2 to 100000 */
                                             int           optInFastK_Period, /* From 1 to 100000 */
                                             int           optInFastD_Period, /* From 1 to 100000 */
                                             MAType        optInFastD_MAType,
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<double>^  outFastK,
                                             cli::array<double>^  outFastD );

         
         

         static int SubLookback( void );

         























         static enum class RetCode Sub( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inReal0,
                                        cli::array<double>^ inReal1,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Sub( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inReal0,
                                        cli::array<float>^ inReal1,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int SumLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         























         static enum class RetCode Sum( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inReal,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Sum( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inReal,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int T3Lookback( int           optInTimePeriod, /* From 2 to 100000 */
                              double        optInVFactor );  /* From 0 to 1 */

         


























         static enum class RetCode T3( int    startIdx,
                                       int    endIdx,
                                       cli::array<double>^ inReal,
                                       int           optInTimePeriod, /* From 2 to 100000 */
                                       double        optInVFactor, /* From 0 to 1 */
                                       [Out]int%    outBegIdx,
                                       [Out]int%    outNBElement,
                                       cli::array<double>^  outReal );
         
         static enum class RetCode T3( int    startIdx,
                                       int    endIdx,
                                       cli::array<float>^ inReal,
                                       int           optInTimePeriod, /* From 2 to 100000 */
                                       double        optInVFactor, /* From 0 to 1 */
                                       [Out]int%    outBegIdx,
                                       [Out]int%    outNBElement,
                                       cli::array<double>^  outReal );

         
         

         static int TanLookback( void );

         




















         static enum class RetCode Tan( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inReal,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Tan( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inReal,
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int TanhLookback( void );

         




















         static enum class RetCode Tanh( int    startIdx,
                                         int    endIdx,
                                         cli::array<double>^ inReal,
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );
         
         static enum class RetCode Tanh( int    startIdx,
                                         int    endIdx,
                                         cli::array<float>^ inReal,
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );

         
         

         static int TemaLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         























         static enum class RetCode Tema( int    startIdx,
                                         int    endIdx,
                                         cli::array<double>^ inReal,
                                         int           optInTimePeriod, /* From 2 to 100000 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );
         
         static enum class RetCode Tema( int    startIdx,
                                         int    endIdx,
                                         cli::array<float>^ inReal,
                                         int           optInTimePeriod, /* From 2 to 100000 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );

         
         

         static int TrueRangeLookback( void );

         


























         static enum class RetCode TrueRange( int    startIdx,
                                              int    endIdx,
                                              cli::array<double>^ inHigh,
                                              cli::array<double>^ inLow,
                                              cli::array<double>^ inClose,
                                              [Out]int%    outBegIdx,
                                              [Out]int%    outNBElement,
                                              cli::array<double>^  outReal );
         
         static enum class RetCode TrueRange( int    startIdx,
                                              int    endIdx,
                                              cli::array<float>^ inHigh,
                                              cli::array<float>^ inLow,
                                              cli::array<float>^ inClose,
                                              [Out]int%    outBegIdx,
                                              [Out]int%    outNBElement,
                                              cli::array<double>^  outReal );

         
         

         static int TrimaLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         























         static enum class RetCode Trima( int    startIdx,
                                          int    endIdx,
                                          cli::array<double>^ inReal,
                                          int           optInTimePeriod, /* From 2 to 100000 */
                                          [Out]int%    outBegIdx,
                                          [Out]int%    outNBElement,
                                          cli::array<double>^  outReal );
         
         static enum class RetCode Trima( int    startIdx,
                                          int    endIdx,
                                          cli::array<float>^ inReal,
                                          int           optInTimePeriod, /* From 2 to 100000 */
                                          [Out]int%    outBegIdx,
                                          [Out]int%    outNBElement,
                                          cli::array<double>^  outReal );

         
         

         static int TrixLookback( int           optInTimePeriod );  /* From 1 to 100000 */

         























         static enum class RetCode Trix( int    startIdx,
                                         int    endIdx,
                                         cli::array<double>^ inReal,
                                         int           optInTimePeriod, /* From 1 to 100000 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );
         
         static enum class RetCode Trix( int    startIdx,
                                         int    endIdx,
                                         cli::array<float>^ inReal,
                                         int           optInTimePeriod, /* From 1 to 100000 */
                                         [Out]int%    outBegIdx,
                                         [Out]int%    outNBElement,
                                         cli::array<double>^  outReal );

         
         

         static int TsfLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         























         static enum class RetCode Tsf( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inReal,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Tsf( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inReal,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

         static int TypPriceLookback( void );

         


























         static enum class RetCode TypPrice( int    startIdx,
                                             int    endIdx,
                                             cli::array<double>^ inHigh,
                                             cli::array<double>^ inLow,
                                             cli::array<double>^ inClose,
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<double>^  outReal );
         
         static enum class RetCode TypPrice( int    startIdx,
                                             int    endIdx,
                                             cli::array<float>^ inHigh,
                                             cli::array<float>^ inLow,
                                             cli::array<float>^ inClose,
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<double>^  outReal );

         
         

         static int UltOscLookback( int           optInTimePeriod1, /* From 1 to 100000 */
                                  int           optInTimePeriod2, /* From 1 to 100000 */
                                  int           optInTimePeriod3 );  /* From 1 to 100000 */

         



































         static enum class RetCode UltOsc( int    startIdx,
                                           int    endIdx,
                                           cli::array<double>^ inHigh,
                                           cli::array<double>^ inLow,
                                           cli::array<double>^ inClose,
                                           int           optInTimePeriod1, /* From 1 to 100000 */
                                           int           optInTimePeriod2, /* From 1 to 100000 */
                                           int           optInTimePeriod3, /* From 1 to 100000 */
                                           [Out]int%    outBegIdx,
                                           [Out]int%    outNBElement,
                                           cli::array<double>^  outReal );
         
         static enum class RetCode UltOsc( int    startIdx,
                                           int    endIdx,
                                           cli::array<float>^ inHigh,
                                           cli::array<float>^ inLow,
                                           cli::array<float>^ inClose,
                                           int           optInTimePeriod1, /* From 1 to 100000 */
                                           int           optInTimePeriod2, /* From 1 to 100000 */
                                           int           optInTimePeriod3, /* From 1 to 100000 */
                                           [Out]int%    outBegIdx,
                                           [Out]int%    outNBElement,
                                           cli::array<double>^  outReal );

         
         

         static int VarianceLookback( int           optInTimePeriod, /* From 1 to 100000 */
                                    double        optInNbDev );  /* From TA_REAL_MIN to TA_REAL_MAX */

         


























         static enum class RetCode Variance( int    startIdx,
                                             int    endIdx,
                                             cli::array<double>^ inReal,
                                             int           optInTimePeriod, /* From 1 to 100000 */
                                             double        optInNbDev, /* From TA_REAL_MIN to TA_REAL_MAX */
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<double>^  outReal );
         
         static enum class RetCode Variance( int    startIdx,
                                             int    endIdx,
                                             cli::array<float>^ inReal,
                                             int           optInTimePeriod, /* From 1 to 100000 */
                                             double        optInNbDev, /* From TA_REAL_MIN to TA_REAL_MAX */
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<double>^  outReal );

         
         

         static int WclPriceLookback( void );

         


























         static enum class RetCode WclPrice( int    startIdx,
                                             int    endIdx,
                                             cli::array<double>^ inHigh,
                                             cli::array<double>^ inLow,
                                             cli::array<double>^ inClose,
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<double>^  outReal );
         
         static enum class RetCode WclPrice( int    startIdx,
                                             int    endIdx,
                                             cli::array<float>^ inHigh,
                                             cli::array<float>^ inLow,
                                             cli::array<float>^ inClose,
                                             [Out]int%    outBegIdx,
                                             [Out]int%    outNBElement,
                                             cli::array<double>^  outReal );

         
         

         static int WillRLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         





























         static enum class RetCode WillR( int    startIdx,
                                          int    endIdx,
                                          cli::array<double>^ inHigh,
                                          cli::array<double>^ inLow,
                                          cli::array<double>^ inClose,
                                          int           optInTimePeriod, /* From 2 to 100000 */
                                          [Out]int%    outBegIdx,
                                          [Out]int%    outNBElement,
                                          cli::array<double>^  outReal );
         
         static enum class RetCode WillR( int    startIdx,
                                          int    endIdx,
                                          cli::array<float>^ inHigh,
                                          cli::array<float>^ inLow,
                                          cli::array<float>^ inClose,
                                          int           optInTimePeriod, /* From 2 to 100000 */
                                          [Out]int%    outBegIdx,
                                          [Out]int%    outNBElement,
                                          cli::array<double>^  outReal );

         
         

         static int WmaLookback( int           optInTimePeriod );  /* From 2 to 100000 */

         























         static enum class RetCode Wma( int    startIdx,
                                        int    endIdx,
                                        cli::array<double>^ inReal,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );
         
         static enum class RetCode Wma( int    startIdx,
                                        int    endIdx,
                                        cli::array<float>^ inReal,
                                        int           optInTimePeriod, /* From 2 to 100000 */
                                        [Out]int%    outBegIdx,
                                        [Out]int%    outNBElement,
                                        cli::array<double>^  outReal );

         
         

/**** END GENCODE SECTION 1 - DO NOT DELETE THIS LINE ****/

  		   };
	   }
	}
}


/* Generated */    
/* Generated */    namespace TicTacTec { namespace TA { namespace Library {
/* Generated */ 








/* Generated */ 
/* Generated */ 
/* Generated */    
/* Provides common mathematical or analysis functions.
 *
 * These functions are all PRIVATE to ta-lib and should
 * never be called directly by the user of the TA-LIB.
 */















   
      
   


/* Calculate a Simple Moving Average.
 * This is an internal version, parameter are assumed validated.
 * (startIdx and endIdx cannot be -1).
 */


















/* Calculate an Exponential Moving Average.
 * This is an internal version, parameter are assumed validated.
 * (startIdx and endIdx cannot be -1).
 */




















/* Calculate a MACD
 * This is an internal version, parameter are assumed validated.
 * (startIdx and endIdx cannot be -1).
 */


























/* Internal Price Oscillator function.
 *
 * A buffer must be provided for intermediate processing
 * 'tempBuffer' must be of at least (endIdx-startIdx+1)
 */


























/* Internal variance function. */


















/* A function to calculate a standard deviation.
 *
 * This function allows speed optimization when the
 * moving average series is already calculated.
 */
















   /* Provides an equivalent to standard "math.h" functions. */

   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   




































/* Rounding macro for doubles. Works only with positive numbers. */


/* Rounding macro for doubles. Works only with negative numbers. */


/* Rounding with a precision of 2 digit after the dot */



/* In the context of TA-Lib, floating point are often 
 * compared within an acceptable error range.
 *
 * As an example,a TA oscillator ranging from 0 to 100 can
 * fairly be considered equal if their difference is less 
 * than 0.000001.
 *
 * Ranging around zero also allows to work around limit 
 * cases where floating point minimal step (EPSILON) causes 
 * unexpected cummulative effect (ending with "negative zero" 
 * being one example).
 *
 * FLT_EPSILON == 1.192092896e-07 for float type on intel with msvc. 
 * DBL_EPSILON == 2.2204460492503131e-016 for the double type.
 *
 * Warning: These macro are not intended as "general purpose" floating
 * point comparison. TA_REAL_EQ is not even transitive. The "ep" parameter
 * must be carefully choosen to work in the domain of the tested values.  
 * Do a search on Google for a more generalize algo.
 */




/* The following macros are being used to do
 * the Hilbert Transform logic as documented
 * in John Ehlers books "Rocket Science For Traders".
 */






































/* Convert a period into the equivalent k:
 *
 *    k = 2 / (period + 1)
 *
 * Useful to calculate the 'k' for TA_INT_EMA().
 */


/* Math Constants and Functions */



   



   


/* Candlestick macros (used by candlestick functions, where the parameters are always called inClose, inOpen, etc.
 * Don't use i++ or func(i) with these macros !
 */








   
   
   































/* Generated */ 
/* Generated */ 
/* Generated */ 
/* Generated */    




















/* ARRAY : Macros to manipulate arrays of value type.
 *
 * Using temporary array of double and integer are often needed for the 
 * TA functions.
 *
 * These macros allow basic operations to alloc/copy/free array of value type.
 *
 * These macros works in plain old C/C++, managed C++.and Java.
 * 
 * (Use ARRAY_REF and ARRAY_INT_REF for double/integer arrays).
 */

   
   
   
   
   
   
   


















/* ARRAY : Macros to manipulate arrays of double. */








/* ARRAY : Macros to manipulate arrays of integer. */








/* Access to "Globals"
 *
 * The globals here just means that these variables are accessible from
 * all technical analysis functions.
 *
 * Depending of the language/platform, the globals might be in reality
 * a private member variable of an object...
 */

   
   










/* CIRCBUF : Circular Buffer Macros.
 *
 * The CIRCBUF is like a FIFO buffer (First In - First Out), except
 * that the rate of data coming out is the same as the rate of
 * data coming in (for simplification and speed optimization).
 * In other word, when you add one new value, you must also consume
 * one value (if not consume, the value is lost).
 *
 * The CIRCBUF size is unlimited, so it will automatically allocate and
 * de-allocate memory as needed. In C/C++. when small enough, CIRCBUF will 
 * instead use a buffer "allocated" on the stack (automatic variable).
 * 
 * Multiple CIRCBUF can be used within the same function. To make that
 * possible the first parameter of the MACRO is an "Id" that can be
 * any string.
 *
 * The macros offer the advantage to work in C/C++ and managed C++.
 * 
 * CIRCBUF_PROLOG(Id,Type,Size);
 *          Will declare all the needed variables. 2 variables are
 *          important: 
 *                 1) 'Id' will be a ptr of the specified Type.
 *                 2) 'Id'_Idx indicates from where to consume and 
 *                     to add the data.
 *
 *          Important: You must consume the oldest data before
 *                     setting the new data!
 *
 *          The Size must be reasonable since it might "allocate"
 *          an array of this size on the stack (each element are 'Type').
 *
 * CIRCBUF_CONSTRUCT(Id,Type,Size);
 *         Must be called prior to use the remaining macros. Must be
 *         followed by CIRCBUF_DESTROY when leaving the function.
 *         The Size here can be large. If the static Size specified
 *         with CIRCBUF_PROLOG is not sufficient, this MACRO will
 *         allocate a new buffer from the Heap.
 *
 * CIRCBUF_DESTROY(Id,Size);
 *         Must be call prior to leave the function.
 *
 * CIRCBUF_NEXT(Id);
 *         Move forward the indexes.
 *
 * Example:
 *     TA_RetCode MyFunc( int size )
 *     {
 *        CIRCBUF_PROLOG(MyBuf,int,4);
 *        int i, value;
 *        ...
 *        CIRCBUF_CONSTRUCT(MyBuf,int,size);
 *        ...
 *        // 1st Loop: Fill MyBuf with initial values
 *        //           (must be done).
 *        value = 0;
 *        for( i=0; i < size; i++ )
 *        {
 *           // Set the data
 *           MyBuf[MyBuf_Idx] = value++;
 *           CIRCBUF_NEXT(MyBuf);
 *        }
 *
 *        // 2nd Loop: Get and Add subsequent values
 *        //           in MyBuf (optional)
 *        for( i=0; i < 3; i++ )
 *        {
 *           // Consume the data (must be done first)
 *           printf( "%d ", MyBuf[MyBuf_Idx] );
 *
 *           // Set the new data (must be done second)
 *           MyBuf[MyBuf_Idx] = value++;
 *
 *           // Move the index forward
 *           CIRCBUF_NEXT(MyBuf);
 *        }
 *
 *        // 3rd Loop: Empty MyBuf (optional)
 *        for( i=0; i < size; i++ )
 *        {
 *           printf( "%d ", MyBuf[MyBuf_Idx] );
 *           CIRCBUF_NEXT(MyBuf);
 *        }
 *
 *        CIRCBUF_DESTROY(MyBuf);
 *        return TA_SUCCESS;
 *     }
 *
 *
 * A call to MyFunc(5) will output:
 *    0 1 2 3 4 5 6 7
 *
 * The value 0 to 4 are added by the 1st loop.
 * The value 5 to 7 are added by the 2nd loop.
 *
 * The value 0 to 2 are displayed by the 2nd loop.
 * The value 3 to 7 are displayed by the 3rd loop.
 *
 * Because the size 5 is greater than the 
 * value provided in CIRCBUF_PROLOG, a buffer will
 * be dynamically allocated (and freed).
 */






/* Use this macro instead if the Type is a class or a struct. */





































/* Use this macro to access the member when type is a class or a struct. */




































































































/* Generated */ 
/* Generated */ 
/* Generated */ 
/* Generated */ 
/* Generated */ 
/* Generated */ 
/* Generated */ int Core::HtDcPhaseLookback( void )
/* Generated */ 
/* Generated */ 






/**** END GENCODE SECTION 1 - DO NOT DELETE THIS LINE ****/
{
   /* insert local variable here */

/**** START GENCODE SECTION 2 - DO NOT DELETE THIS LINE ****/
/* Generated */ /* No parameters to validate. */
/**** END GENCODE SECTION 2 - DO NOT DELETE THIS LINE ****/

   /* insert lookback code here. */

   /*  31 input are skip 
    * +32 output are skip to account for misc lookback
    * ---
    *  63 Total Lookback
    *
    * 31 is for being compatible with Tradestation.
    * See TA_MAMA_Lookback for an explanation of the "32".
    */
   return 63 + (Globals->unstablePeriod[(int)(FuncUnstId::HtDcPhase)]);
}

/**** START GENCODE SECTION 3 - DO NOT DELETE THIS LINE ****/
/*
 * TA_HT_DCPHASE - Hilbert Transform - Dominant Cycle Phase
 * 
 * Input  = double
 * Output = double
 * 
 */
/* Generated */ 
/* Generated */ 







/* Generated */ enum class Core::RetCode Core::HtDcPhase( int    startIdx,
/* Generated */                                           int    endIdx,
/* Generated */                                           cli::array<double>^ inReal,
/* Generated */                                           [Out]int%    outBegIdx,
/* Generated */                                           [Out]int%    outNBElement,
/* Generated */                                           cli::array<double>^  outReal )
/* Generated */ 














/**** END GENCODE SECTION 3 - DO NOT DELETE THIS LINE ****/
{
	/* insert local variable here */
   int outIdx, i;
   int lookbackTotal, today;
   double tempReal, tempReal2;

   double adjustedPrevPeriod, period;

   /* Variable used for the price smoother (a weighted moving average). */
   int trailingWMAIdx;
   double periodWMASum, periodWMASub, trailingWMAValue;
   double smoothedValue;

   /* Variables used for the Hilbert Transormation */
   const double a = 0.0962;
   const double b = 0.5769;
   double hilbertTempReal;
   int hilbertIdx;

   cli::array<double>^ detrender_Odd = gcnew cli::array<double>(3); cli::array<double>^ detrender_Even = gcnew cli::array<double>(3); double detrender; double prev_detrender_Odd; double prev_detrender_Even; double prev_detrender_input_Odd; double prev_detrender_input_Even;
   cli::array<double>^ Q1_Odd = gcnew cli::array<double>(3); cli::array<double>^ Q1_Even = gcnew cli::array<double>(3); double Q1; double prev_Q1_Odd; double prev_Q1_Even; double prev_Q1_input_Odd; double prev_Q1_input_Even;
   cli::array<double>^ jI_Odd = gcnew cli::array<double>(3); cli::array<double>^ jI_Even = gcnew cli::array<double>(3); double jI; double prev_jI_Odd; double prev_jI_Even; double prev_jI_input_Odd; double prev_jI_input_Even;
   cli::array<double>^ jQ_Odd = gcnew cli::array<double>(3); cli::array<double>^ jQ_Even = gcnew cli::array<double>(3); double jQ; double prev_jQ_Odd; double prev_jQ_Even; double prev_jQ_input_Odd; double prev_jQ_input_Even;

   double Q2, I2, prevQ2, prevI2, Re, Im;

   double I1ForOddPrev2,  I1ForOddPrev3;
   double I1ForEvenPrev2, I1ForEvenPrev3;

   double rad2Deg, constDeg2RadBy360;

   double todayValue, smoothPeriod;

   /* Varaible used to keep track of the previous
    * smooth price. In the case of this algorithm,
    * we will never need more than 50 values.
    */
   
   int smoothPrice_Idx = 0; cli::array<double>^ smoothPrice; int maxIdx_smoothPrice = (50-1);
   int idx;

   /* Variable used to calculate the dominant cycle phase */
   int DCPeriodInt;
   double DCPhase, DCPeriod, imagPart, realPart;

/**** START GENCODE SECTION 4 - DO NOT DELETE THIS LINE ****/
/* Generated */ 
/* Generated */ 
/* Generated */ 
/* Generated */    /* Validate the requested output range. */
/* Generated */    if( startIdx < 0 )
/* Generated */       return (RetCode::OutOfRangeStartIndex);
/* Generated */    if( (endIdx < 0) || (endIdx < startIdx))
/* Generated */       return (RetCode::OutOfRangeEndIndex);
/* Generated */ 
/* Generated */    
/* Generated */    if( !inReal ) return (RetCode::BadParam);
/* Generated */    
/* Generated */    
/* Generated */    if( !outReal )
/* Generated */       return (RetCode::BadParam);
/* Generated */ 
/* Generated */    
/* Generated */ 
/* Generated */ 
/**** END GENCODE SECTION 4 - DO NOT DELETE THIS LINE ****/

   /* Insert TA function code here. */

   { smoothPrice = gcnew cli::array<double>(maxIdx_smoothPrice+1); if( !smoothPrice ) return (RetCode::AllocErr); };

   /* Constant */
   tempReal = Math::Atan(1);
   rad2Deg = 45.0/tempReal;
   constDeg2RadBy360 = tempReal*8.0;

   /* Identify the minimum number of price bar needed
    * to calculate at least one output.
    */
   lookbackTotal = 63 + (Globals->unstablePeriod[(int)(FuncUnstId::HtDcPhase)]);

   /* Move up the start index if there is not
    * enough initial data.
    */
   if( startIdx < lookbackTotal )
      startIdx = lookbackTotal;

   /* Make sure there is still something to evaluate. */
   if( startIdx > endIdx )
   {
      outBegIdx = 0;
      outNBElement = 0;
      return (RetCode::Success);
   }

   outBegIdx = startIdx;

   /* Initialize the price smoother, which is simply a weighted
    * moving average of the price.
    * To understand this algorithm, I strongly suggest to understand
    * first how TA_WMA is done.
    */
   trailingWMAIdx = startIdx - lookbackTotal;
   today = trailingWMAIdx;

   /* Initialization is same as WMA, except loop is unrolled
    * for speed optimization.
    */
   tempReal = inReal[today++];
   periodWMASub = tempReal;
   periodWMASum = tempReal;
   tempReal = inReal[today++];
   periodWMASub += tempReal;
   periodWMASum += tempReal*2.0;
   tempReal = inReal[today++];
   periodWMASub += tempReal;
   periodWMASum += tempReal*3.0;

   trailingWMAValue = 0.0;

   /* Subsequent WMA value are evaluated by using
    * the DO_PRICE_WMA macro.
    */
   








   i = 34;
   do
   {
      tempReal = inReal[today++];
      { periodWMASub += tempReal; periodWMASub -= trailingWMAValue; periodWMASum += tempReal*4.0; trailingWMAValue = inReal[trailingWMAIdx++]; smoothedValue = periodWMASum*0.1; periodWMASum -= periodWMASub; };
   } while( --i != 0);

   /* Initialize the circular buffers used by the hilbert
    * transform logic. 
    * A buffer is used for odd day and another for even days.
    * This minimize the number of memory access and floating point
    * operations needed (note also that by using static circular buffer, 
    * no large dynamic memory allocation is needed for storing
    * intermediate calculation!).
    */
   hilbertIdx = 0;

   { detrender_Odd [0] = 0.0; detrender_Odd [1] = 0.0; detrender_Odd [2] = 0.0; detrender_Even[0] = 0.0; detrender_Even[1] = 0.0; detrender_Even[2] = 0.0; detrender = 0.0; prev_detrender_Odd = 0.0; prev_detrender_Even = 0.0; prev_detrender_input_Odd = 0.0; prev_detrender_input_Even = 0.0; };
   { Q1_Odd [0] = 0.0; Q1_Odd [1] = 0.0; Q1_Odd [2] = 0.0; Q1_Even[0] = 0.0; Q1_Even[1] = 0.0; Q1_Even[2] = 0.0; Q1 = 0.0; prev_Q1_Odd = 0.0; prev_Q1_Even = 0.0; prev_Q1_input_Odd = 0.0; prev_Q1_input_Even = 0.0; };
   { jI_Odd [0] = 0.0; jI_Odd [1] = 0.0; jI_Odd [2] = 0.0; jI_Even[0] = 0.0; jI_Even[1] = 0.0; jI_Even[2] = 0.0; jI = 0.0; prev_jI_Odd = 0.0; prev_jI_Even = 0.0; prev_jI_input_Odd = 0.0; prev_jI_input_Even = 0.0; };
   { jQ_Odd [0] = 0.0; jQ_Odd [1] = 0.0; jQ_Odd [2] = 0.0; jQ_Even[0] = 0.0; jQ_Even[1] = 0.0; jQ_Even[2] = 0.0; jQ = 0.0; prev_jQ_Odd = 0.0; prev_jQ_Even = 0.0; prev_jQ_input_Odd = 0.0; prev_jQ_input_Even = 0.0; };

   period = 0.0;
   outIdx = 0;

   prevI2 = prevQ2 = 0.0;
   Re     = Im     = 0.0;
   I1ForOddPrev3 = I1ForEvenPrev3 = 0.0;
   I1ForOddPrev2 = I1ForEvenPrev2 = 0.0;
   smoothPeriod  = 0.0;

   for( i=0; i < 50; i++ )
      smoothPrice[i] = 0.0;

   /* The code is speed optimized and is most likely very
    * hard to follow if you do not already know well the
    * original algorithm.
    * To understadn better, it is strongly suggested to look 
    * first at the Excel implementation in "test_MAMA.xls" included
    * in this package.
    */
   DCPhase = 0.0;
   while( today <= endIdx )
   {
      adjustedPrevPeriod = (0.075*period)+0.54;

      todayValue = inReal[today];
      { periodWMASub += todayValue; periodWMASub -= trailingWMAValue; periodWMASum += todayValue*4.0; trailingWMAValue = inReal[trailingWMAIdx++]; smoothedValue = periodWMASum*0.1; periodWMASum -= periodWMASub; };

      /* Remember the smoothedValue into the smoothPrice
       * circular buffer.
       */
      smoothPrice[smoothPrice_Idx] = smoothedValue;

      if( (today%2) == 0 )
      {
         /* Do the Hilbert Transforms for even price bar */
         { hilbertTempReal = a * smoothedValue; detrender = -detrender_Even[hilbertIdx]; detrender_Even[hilbertIdx] = hilbertTempReal; detrender += hilbertTempReal; detrender -= prev_detrender_Even; prev_detrender_Even = b * prev_detrender_input_Even; detrender += prev_detrender_Even; prev_detrender_input_Even = smoothedValue; detrender *= adjustedPrevPeriod; };
         { hilbertTempReal = a * detrender; Q1 = -Q1_Even[hilbertIdx]; Q1_Even[hilbertIdx] = hilbertTempReal; Q1 += hilbertTempReal; Q1 -= prev_Q1_Even; prev_Q1_Even = b * prev_Q1_input_Even; Q1 += prev_Q1_Even; prev_Q1_input_Even = detrender; Q1 *= adjustedPrevPeriod; };
         { hilbertTempReal = a * I1ForEvenPrev3; jI = -jI_Even[hilbertIdx]; jI_Even[hilbertIdx] = hilbertTempReal; jI += hilbertTempReal; jI -= prev_jI_Even; prev_jI_Even = b * prev_jI_input_Even; jI += prev_jI_Even; prev_jI_input_Even = I1ForEvenPrev3; jI *= adjustedPrevPeriod; };
         { hilbertTempReal = a * Q1; jQ = -jQ_Even[hilbertIdx]; jQ_Even[hilbertIdx] = hilbertTempReal; jQ += hilbertTempReal; jQ -= prev_jQ_Even; prev_jQ_Even = b * prev_jQ_input_Even; jQ += prev_jQ_Even; prev_jQ_input_Even = Q1; jQ *= adjustedPrevPeriod; };
         if( ++hilbertIdx == 3 )
            hilbertIdx = 0;

         Q2 = (0.2*(Q1 + jI)) + (0.8*prevQ2);
         I2 = (0.2*(I1ForEvenPrev3 - jQ)) + (0.8*prevI2);

         /* The variable I1 is the detrender delayed for
          * 3 price bars. 
          *
          * Save the current detrender value for being
          * used by the "odd" logic later.
          */
         I1ForOddPrev3 = I1ForOddPrev2;
         I1ForOddPrev2 = detrender;      
      }
      else
      {
         /* Do the Hilbert Transforms for odd price bar */
         { hilbertTempReal = a * smoothedValue; detrender = -detrender_Odd[hilbertIdx]; detrender_Odd[hilbertIdx] = hilbertTempReal; detrender += hilbertTempReal; detrender -= prev_detrender_Odd; prev_detrender_Odd = b * prev_detrender_input_Odd; detrender += prev_detrender_Odd; prev_detrender_input_Odd = smoothedValue; detrender *= adjustedPrevPeriod; };
         { hilbertTempReal = a * detrender; Q1 = -Q1_Odd[hilbertIdx]; Q1_Odd[hilbertIdx] = hilbertTempReal; Q1 += hilbertTempReal; Q1 -= prev_Q1_Odd; prev_Q1_Odd = b * prev_Q1_input_Odd; Q1 += prev_Q1_Odd; prev_Q1_input_Odd = detrender; Q1 *= adjustedPrevPeriod; };
         { hilbertTempReal = a * I1ForOddPrev3; jI = -jI_Odd[hilbertIdx]; jI_Odd[hilbertIdx] = hilbertTempReal; jI += hilbertTempReal; jI -= prev_jI_Odd; prev_jI_Odd = b * prev_jI_input_Odd; jI += prev_jI_Odd; prev_jI_input_Odd = I1ForOddPrev3; jI *= adjustedPrevPeriod; };
         { hilbertTempReal = a * Q1; jQ = -jQ_Odd[hilbertIdx]; jQ_Odd[hilbertIdx] = hilbertTempReal; jQ += hilbertTempReal; jQ -= prev_jQ_Odd; prev_jQ_Odd = b * prev_jQ_input_Odd; jQ += prev_jQ_Odd; prev_jQ_input_Odd = Q1; jQ *= adjustedPrevPeriod; };

         Q2 = (0.2*(Q1 + jI)) + (0.8*prevQ2);
         I2 = (0.2*(I1ForOddPrev3 - jQ)) + (0.8*prevI2);

         /* The varaiable I1 is the detrender delayed for
          * 3 price bars. 
          *
          * Save the current detrender value for being
          * used by the "even" logic later.
          */
         I1ForEvenPrev3 = I1ForEvenPrev2;
         I1ForEvenPrev2 = detrender;
      }

      /* Adjust the period for next price bar */
      Re = (0.2*((I2*prevI2)+(Q2*prevQ2)))+(0.8*Re);
      Im = (0.2*((I2*prevQ2)-(Q2*prevI2)))+(0.8*Im);
      prevQ2 = Q2;
      prevI2 = I2;
      tempReal = period;
      if( (Im != 0.0) && (Re != 0.0) )
         period = 360.0 / (Math::Atan(Im/Re)*rad2Deg);
      tempReal2 = 1.5*tempReal;
      if( period > tempReal2)
         period = tempReal2;
      tempReal2 = 0.67*tempReal;
      if( period < tempReal2 )
         period = tempReal2;
      if( period < 6 )
         period = 6;
      else if( period > 50 )
         period = 50;
      period = (0.2*period) + (0.8 * tempReal);

      smoothPeriod = (0.33*period)+(0.67*smoothPeriod);

      /* Compute Dominant Cycle Phase */
      DCPeriod    = smoothPeriod+0.5;
      DCPeriodInt = (int)DCPeriod;
      realPart = 0.0;
      imagPart = 0.0;

      /* idx is used to iterate for up to 50 of the last
       * value of smoothPrice.
       */
      idx = smoothPrice_Idx;
      for( i=0; i < DCPeriodInt; i++ )
      {
         tempReal  = ((double)i*constDeg2RadBy360)/(double)DCPeriodInt;
         tempReal2 = smoothPrice[idx];
         realPart += Math::Sin(tempReal)*tempReal2;
         imagPart += Math::Cos(tempReal)*tempReal2;
         if( idx == 0 )
            idx = 50-1;
         else
            idx--;
      }

      tempReal = Math::Abs(imagPart);
      if( tempReal > 0.0 )
         DCPhase = Math::Atan(realPart/imagPart)*rad2Deg;
      else if( tempReal <= 0.01 )
      {
         if( realPart < 0.0 )
            DCPhase -= 90.0;
         else if( realPart > 0.0 )
            DCPhase += 90.0;
      }
      DCPhase += 90.0;

      /* Compensate for one bar lag of the weighted moving average */
      DCPhase += 360.0 / smoothPeriod;
      if( imagPart < 0.0 )
         DCPhase += 180.0;
      if( DCPhase > 315.0 )
         DCPhase -= 360.0;

      if( today >= startIdx )
      {
         outReal[outIdx++] = DCPhase;
      }

      /* Ooof... let's do the next price bar now! */
      { smoothPrice_Idx++; if( smoothPrice_Idx > maxIdx_smoothPrice ) smoothPrice_Idx = 0; };
      today++;
   }

   outNBElement = outIdx;
 
   return (RetCode::Success);
}

/**** START GENCODE SECTION 5 - DO NOT DELETE THIS LINE ****/
/* Generated */ 
/* Generated */ 
/* Generated */ 



/* Generated */ 
/* Generated */ 
/* Generated */ 
/* Generated */ enum class Core::RetCode Core::HtDcPhase( int    startIdx,
/* Generated */                                           int    endIdx,
/* Generated */                                           cli::array<float>^ inReal,
/* Generated */                                           [Out]int%    outBegIdx,
/* Generated */                                           [Out]int%    outNBElement,
/* Generated */                                           cli::array<double>^  outReal )
/* Generated */ 














/* Generated */ {
/* Generated */    int outIdx, i;
/* Generated */    int lookbackTotal, today;
/* Generated */    double tempReal, tempReal2;
/* Generated */    double adjustedPrevPeriod, period;
/* Generated */    int trailingWMAIdx;
/* Generated */    double periodWMASum, periodWMASub, trailingWMAValue;
/* Generated */    double smoothedValue;
/* Generated */    const double a = 0.0962;
/* Generated */    const double b = 0.5769;
/* Generated */    double hilbertTempReal;
/* Generated */    int hilbertIdx;
/* Generated */    cli::array<double>^ detrender_Odd = gcnew cli::array<double>(3); cli::array<double>^ detrender_Even = gcnew cli::array<double>(3); double detrender; double prev_detrender_Odd; double prev_detrender_Even; double prev_detrender_input_Odd; double prev_detrender_input_Even;
/* Generated */    cli::array<double>^ Q1_Odd = gcnew cli::array<double>(3); cli::array<double>^ Q1_Even = gcnew cli::array<double>(3); double Q1; double prev_Q1_Odd; double prev_Q1_Even; double prev_Q1_input_Odd; double prev_Q1_input_Even;
/* Generated */    cli::array<double>^ jI_Odd = gcnew cli::array<double>(3); cli::array<double>^ jI_Even = gcnew cli::array<double>(3); double jI; double prev_jI_Odd; double prev_jI_Even; double prev_jI_input_Odd; double prev_jI_input_Even;
/* Generated */    cli::array<double>^ jQ_Odd = gcnew cli::array<double>(3); cli::array<double>^ jQ_Even = gcnew cli::array<double>(3); double jQ; double prev_jQ_Odd; double prev_jQ_Even; double prev_jQ_input_Odd; double prev_jQ_input_Even;
/* Generated */    double Q2, I2, prevQ2, prevI2, Re, Im;
/* Generated */    double I1ForOddPrev2,  I1ForOddPrev3;
/* Generated */    double I1ForEvenPrev2, I1ForEvenPrev3;
/* Generated */    double rad2Deg, constDeg2RadBy360;
/* Generated */    double todayValue, smoothPeriod;
/* Generated */    
/* Generated */    int smoothPrice_Idx = 0; cli::array<double>^ smoothPrice; int maxIdx_smoothPrice = (50-1);
/* Generated */    int idx;
/* Generated */    int DCPeriodInt;
/* Generated */    double DCPhase, DCPeriod, imagPart, realPart;
/* Generated */  
/* Generated */     if( startIdx < 0 )
/* Generated */        return (RetCode::OutOfRangeStartIndex);
/* Generated */     if( (endIdx < 0) || (endIdx < startIdx))
/* Generated */        return (RetCode::OutOfRangeEndIndex);
/* Generated */     
/* Generated */     if( !inReal ) return (RetCode::BadParam);
/* Generated */     
/* Generated */     
/* Generated */     if( !outReal )
/* Generated */        return (RetCode::BadParam);
/* Generated */     
/* Generated */  
/* Generated */    { smoothPrice = gcnew cli::array<double>(maxIdx_smoothPrice+1); if( !smoothPrice ) return (RetCode::AllocErr); };
/* Generated */    tempReal = Math::Atan(1);
/* Generated */    rad2Deg = 45.0/tempReal;
/* Generated */    constDeg2RadBy360 = tempReal*8.0;
/* Generated */    lookbackTotal = 63 + (Globals->unstablePeriod[(int)(FuncUnstId::HtDcPhase)]);
/* Generated */    if( startIdx < lookbackTotal )
/* Generated */       startIdx = lookbackTotal;
/* Generated */    if( startIdx > endIdx )
/* Generated */    {
/* Generated */       outBegIdx = 0;
/* Generated */       outNBElement = 0;
/* Generated */       return (RetCode::Success);
/* Generated */    }
/* Generated */    outBegIdx = startIdx;
/* Generated */    trailingWMAIdx = startIdx - lookbackTotal;
/* Generated */    today = trailingWMAIdx;
/* Generated */    tempReal = inReal[today++];
/* Generated */    periodWMASub = tempReal;
/* Generated */    periodWMASum = tempReal;
/* Generated */    tempReal = inReal[today++];
/* Generated */    periodWMASub += tempReal;
/* Generated */    periodWMASum += tempReal*2.0;
/* Generated */    tempReal = inReal[today++];
/* Generated */    periodWMASub += tempReal;
/* Generated */    periodWMASum += tempReal*3.0;
/* Generated */    trailingWMAValue = 0.0;
/* Generated */    







/* Generated */    i = 34;
/* Generated */    do
/* Generated */    {
/* Generated */       tempReal = inReal[today++];
/* Generated */       { periodWMASub += tempReal; periodWMASub -= trailingWMAValue; periodWMASum += tempReal*4.0; trailingWMAValue = inReal[trailingWMAIdx++]; smoothedValue = periodWMASum*0.1; periodWMASum -= periodWMASub; };
/* Generated */    } while( --i != 0);
/* Generated */    hilbertIdx = 0;
/* Generated */    { detrender_Odd [0] = 0.0; detrender_Odd [1] = 0.0; detrender_Odd [2] = 0.0; detrender_Even[0] = 0.0; detrender_Even[1] = 0.0; detrender_Even[2] = 0.0; detrender = 0.0; prev_detrender_Odd = 0.0; prev_detrender_Even = 0.0; prev_detrender_input_Odd = 0.0; prev_detrender_input_Even = 0.0; };
/* Generated */    { Q1_Odd [0] = 0.0; Q1_Odd [1] = 0.0; Q1_Odd [2] = 0.0; Q1_Even[0] = 0.0; Q1_Even[1] = 0.0; Q1_Even[2] = 0.0; Q1 = 0.0; prev_Q1_Odd = 0.0; prev_Q1_Even = 0.0; prev_Q1_input_Odd = 0.0; prev_Q1_input_Even = 0.0; };
/* Generated */    { jI_Odd [0] = 0.0; jI_Odd [1] = 0.0; jI_Odd [2] = 0.0; jI_Even[0] = 0.0; jI_Even[1] = 0.0; jI_Even[2] = 0.0; jI = 0.0; prev_jI_Odd = 0.0; prev_jI_Even = 0.0; prev_jI_input_Odd = 0.0; prev_jI_input_Even = 0.0; };
/* Generated */    { jQ_Odd [0] = 0.0; jQ_Odd [1] = 0.0; jQ_Odd [2] = 0.0; jQ_Even[0] = 0.0; jQ_Even[1] = 0.0; jQ_Even[2] = 0.0; jQ = 0.0; prev_jQ_Odd = 0.0; prev_jQ_Even = 0.0; prev_jQ_input_Odd = 0.0; prev_jQ_input_Even = 0.0; };
/* Generated */    period = 0.0;
/* Generated */    outIdx = 0;
/* Generated */    prevI2 = prevQ2 = 0.0;
/* Generated */    Re     = Im     = 0.0;
/* Generated */    I1ForOddPrev3 = I1ForEvenPrev3 = 0.0;
/* Generated */    I1ForOddPrev2 = I1ForEvenPrev2 = 0.0;
/* Generated */    smoothPeriod  = 0.0;
/* Generated */    for( i=0; i < 50; i++ )
/* Generated */       smoothPrice[i] = 0.0;
/* Generated */    DCPhase = 0.0;
/* Generated */    while( today <= endIdx )
/* Generated */    {
/* Generated */       adjustedPrevPeriod = (0.075*period)+0.54;
/* Generated */       todayValue = inReal[today];
/* Generated */       { periodWMASub += todayValue; periodWMASub -= trailingWMAValue; periodWMASum += todayValue*4.0; trailingWMAValue = inReal[trailingWMAIdx++]; smoothedValue = periodWMASum*0.1; periodWMASum -= periodWMASub; };
/* Generated */       smoothPrice[smoothPrice_Idx] = smoothedValue;
/* Generated */       if( (today%2) == 0 )
/* Generated */       {
/* Generated */          { hilbertTempReal = a * smoothedValue; detrender = -detrender_Even[hilbertIdx]; detrender_Even[hilbertIdx] = hilbertTempReal; detrender += hilbertTempReal; detrender -= prev_detrender_Even; prev_detrender_Even = b * prev_detrender_input_Even; detrender += prev_detrender_Even; prev_detrender_input_Even = smoothedValue; detrender *= adjustedPrevPeriod; };
/* Generated */          { hilbertTempReal = a * detrender; Q1 = -Q1_Even[hilbertIdx]; Q1_Even[hilbertIdx] = hilbertTempReal; Q1 += hilbertTempReal; Q1 -= prev_Q1_Even; prev_Q1_Even = b * prev_Q1_input_Even; Q1 += prev_Q1_Even; prev_Q1_input_Even = detrender; Q1 *= adjustedPrevPeriod; };
/* Generated */          { hilbertTempReal = a * I1ForEvenPrev3; jI = -jI_Even[hilbertIdx]; jI_Even[hilbertIdx] = hilbertTempReal; jI += hilbertTempReal; jI -= prev_jI_Even; prev_jI_Even = b * prev_jI_input_Even; jI += prev_jI_Even; prev_jI_input_Even = I1ForEvenPrev3; jI *= adjustedPrevPeriod; };
/* Generated */          { hilbertTempReal = a * Q1; jQ = -jQ_Even[hilbertIdx]; jQ_Even[hilbertIdx] = hilbertTempReal; jQ += hilbertTempReal; jQ -= prev_jQ_Even; prev_jQ_Even = b * prev_jQ_input_Even; jQ += prev_jQ_Even; prev_jQ_input_Even = Q1; jQ *= adjustedPrevPeriod; };
/* Generated */          if( ++hilbertIdx == 3 )
/* Generated */             hilbertIdx = 0;
/* Generated */          Q2 = (0.2*(Q1 + jI)) + (0.8*prevQ2);
/* Generated */          I2 = (0.2*(I1ForEvenPrev3 - jQ)) + (0.8*prevI2);
/* Generated */          I1ForOddPrev3 = I1ForOddPrev2;
/* Generated */          I1ForOddPrev2 = detrender;      
/* Generated */       }
/* Generated */       else
/* Generated */       {
/* Generated */          { hilbertTempReal = a * smoothedValue; detrender = -detrender_Odd[hilbertIdx]; detrender_Odd[hilbertIdx] = hilbertTempReal; detrender += hilbertTempReal; detrender -= prev_detrender_Odd; prev_detrender_Odd = b * prev_detrender_input_Odd; detrender += prev_detrender_Odd; prev_detrender_input_Odd = smoothedValue; detrender *= adjustedPrevPeriod; };
/* Generated */          { hilbertTempReal = a * detrender; Q1 = -Q1_Odd[hilbertIdx]; Q1_Odd[hilbertIdx] = hilbertTempReal; Q1 += hilbertTempReal; Q1 -= prev_Q1_Odd; prev_Q1_Odd = b * prev_Q1_input_Odd; Q1 += prev_Q1_Odd; prev_Q1_input_Odd = detrender; Q1 *= adjustedPrevPeriod; };
/* Generated */          { hilbertTempReal = a * I1ForOddPrev3; jI = -jI_Odd[hilbertIdx]; jI_Odd[hilbertIdx] = hilbertTempReal; jI += hilbertTempReal; jI -= prev_jI_Odd; prev_jI_Odd = b * prev_jI_input_Odd; jI += prev_jI_Odd; prev_jI_input_Odd = I1ForOddPrev3; jI *= adjustedPrevPeriod; };
/* Generated */          { hilbertTempReal = a * Q1; jQ = -jQ_Odd[hilbertIdx]; jQ_Odd[hilbertIdx] = hilbertTempReal; jQ += hilbertTempReal; jQ -= prev_jQ_Odd; prev_jQ_Odd = b * prev_jQ_input_Odd; jQ += prev_jQ_Odd; prev_jQ_input_Odd = Q1; jQ *= adjustedPrevPeriod; };
/* Generated */          Q2 = (0.2*(Q1 + jI)) + (0.8*prevQ2);
/* Generated */          I2 = (0.2*(I1ForOddPrev3 - jQ)) + (0.8*prevI2);
/* Generated */          I1ForEvenPrev3 = I1ForEvenPrev2;
/* Generated */          I1ForEvenPrev2 = detrender;
/* Generated */       }
/* Generated */       Re = (0.2*((I2*prevI2)+(Q2*prevQ2)))+(0.8*Re);
/* Generated */       Im = (0.2*((I2*prevQ2)-(Q2*prevI2)))+(0.8*Im);
/* Generated */       prevQ2 = Q2;
/* Generated */       prevI2 = I2;
/* Generated */       tempReal = period;
/* Generated */       if( (Im != 0.0) && (Re != 0.0) )
/* Generated */          period = 360.0 / (Math::Atan(Im/Re)*rad2Deg);
/* Generated */       tempReal2 = 1.5*tempReal;
/* Generated */       if( period > tempReal2)
/* Generated */          period = tempReal2;
/* Generated */       tempReal2 = 0.67*tempReal;
/* Generated */       if( period < tempReal2 )
/* Generated */          period = tempReal2;
/* Generated */       if( period < 6 )
/* Generated */          period = 6;
/* Generated */       else if( period > 50 )
/* Generated */          period = 50;
/* Generated */       period = (0.2*period) + (0.8 * tempReal);
/* Generated */       smoothPeriod = (0.33*period)+(0.67*smoothPeriod);
/* Generated */       DCPeriod    = smoothPeriod+0.5;
/* Generated */       DCPeriodInt = (int)DCPeriod;
/* Generated */       realPart = 0.0;
/* Generated */       imagPart = 0.0;
/* Generated */       idx = smoothPrice_Idx;
/* Generated */       for( i=0; i < DCPeriodInt; i++ )
/* Generated */       {
/* Generated */          tempReal  = ((double)i*constDeg2RadBy360)/(double)DCPeriodInt;
/* Generated */          tempReal2 = smoothPrice[idx];
/* Generated */          realPart += Math::Sin(tempReal)*tempReal2;
/* Generated */          imagPart += Math::Cos(tempReal)*tempReal2;
/* Generated */          if( idx == 0 )
/* Generated */             idx = 50-1;
/* Generated */          else
/* Generated */             idx--;
/* Generated */       }
/* Generated */       tempReal = Math::Abs(imagPart);
/* Generated */       if( tempReal > 0.0 )
/* Generated */          DCPhase = Math::Atan(realPart/imagPart)*rad2Deg;
/* Generated */       else if( tempReal <= 0.01 )
/* Generated */       {
/* Generated */          if( realPart < 0.0 )
/* Generated */             DCPhase -= 90.0;
/* Generated */          else if( realPart > 0.0 )
/* Generated */             DCPhase += 90.0;
/* Generated */       }
/* Generated */       DCPhase += 90.0;
/* Generated */       DCPhase += 360.0 / smoothPeriod;
/* Generated */       if( imagPart < 0.0 )
/* Generated */          DCPhase += 180.0;
/* Generated */       if( DCPhase > 315.0 )
/* Generated */          DCPhase -= 360.0;
/* Generated */       if( today >= startIdx )
/* Generated */       {
/* Generated */          outReal[outIdx++] = DCPhase;
/* Generated */       }
/* Generated */       { smoothPrice_Idx++; if( smoothPrice_Idx > maxIdx_smoothPrice ) smoothPrice_Idx = 0; };
/* Generated */       today++;
/* Generated */    }
/* Generated */    outNBElement = outIdx;
/* Generated */    return (RetCode::Success);
/* Generated */ }
/* Generated */ 
/* Generated */ 
/* Generated */ }}} // Close namespace TicTacTec.TA.Lib
/* Generated */ 
/**** END GENCODE SECTION 5 - DO NOT DELETE THIS LINE ****/

