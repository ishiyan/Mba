{ Discrete Fourier Transform (DFT) © 2013 John F. Ehlers }

Inputs:
SpectralDilationCompensation(true);

Vars:
alpha1(0), HP(0), a1(0), b1(0), c1(0), c2(0), c3(0), Filt(0), Period(0), N(0), M(0),
MaxPwr(0), Comp(0), Sp(0), Spx(0), DominantCycle(0), Color1(0), Color2(0);

//Arrays are sized to have a maximum Period of 48 bars
Arrays:
CosinePart[48](0), SinePart[48](0), Pwr[48](0);

//Highpass filter cyclic components whose periods are shorter than 48 bars
alpha1 = (Cosine(.707*360 / 48) + Sine (.707*360 / 48) - 1) / Cosine(.707*360 / 48);
HP = (1 - alpha1 / 2)*(1 - alpha1 / 2)*(Close - 2*Close[1] + Close[2]) + 2*(1 - alpha1)*HP[1] - (1 - alpha1)* (1 - alpha1)*HP[2];

//Smooth with a Super Smoother Filter
a1 = expvalue(-1.414*3.14159 / 10);
b1 = 2*a1*Cosine(1.414*180 / 10);
c2 = b1;
c3 = -a1*a1;
c1 = 1 - c2 - c3;
Filt = c1*(HP + HP[1]) / 2 + c2*Filt[1] + c3*Filt[2];

//This is the DFT
For Period = 10 to 48 Begin
    Comp = Period;
    If SpectralDilationCompensation = False Then Comp = 1;
    CosinePart[Period] = 0;
    SinePart[Period] = 0;
    //Find Cosine and Sine correlated components, compensated for fractal dilation
    For N = 0 to 47 Begin
        CosinePart[Period] = CosinePart[Period] + Filt[N]*Cosine(360*N/Period) / Comp;
        SinePart[Period] = SinePart[Period] + Filt[N]*Sine(360*N/Period) / Comp;
    End;
    Pwr[Period] = CosinePart[Period]*CosinePart[Period] + Sine
    Part[Period]*SinePart[Period];
End;

//Find Maximum Power Level for Normalization
MaxPwr = .995*MaxPwr[1];
For Period = 8 to 48 Begin
    If Pwr[Period] > MaxPwr Then MaxPwr = Pwr[Period];
End;

//Normalize Power Levels and Convert to Decibels
For Period = 10 to 48 Begin
    IF MaxPwr > 0 Then Pwr[Period] = Pwr[Period] / MaxPwr;
End;

//Compute the dominant cycle using the CG of the spectrum
Spx = 0;
Sp = 0;
For Period = 10 to 48 Begin
    If Pwr[Period] >= .5 Then Begin
        Spx = Spx + Period*Pwr[Period];
        Sp = Sp + Pwr[Period];
    End;
End;

If Sp <> 0 Then DominantCycle = Spx / Sp;
Plot2(DominantCycle, “DC”, RGB(0, 0, 255), 0, 2);
{
    //Increase Display Resolution by raising the NormPwr to a
    higher mathematical power (optional)
    For Period = 10 to 48 Begin
        Pwr[Period] = Power(Pwr[Period], 3);
    End;
}

//Plot the Spectrum as a Heatmap
For Period = 10 to 48 Begin
    //Convert Power to RGB Color for Display
    If Pwr[Period] >= .5 Then Begin
        Color1 = 255;
        Color2 = 255*(2*Pwr[Period] - 1);
    End;

    If Pwr[Period] < .5 Then Begin
        Color1 = 255*2*Pwr[Period];
        Color2 = 0;
    End;

    If Period = 10 Then Plot10(10, “S10”, RGB(Color1, Color2, 0), 0,4);
    If Period = 11 Then Plot11(11, “S11”, RGB(Color1, Color2, 0), 0,4);
    If Period = 12 Then Plot12(12, “S12”, RGB(Color1, Color2, 0), 0,4);
    If Period = 13 Then Plot13(13, “S13”, RGB(Color1, Color2, 0), 0,4);
    If Period = 14 Then Plot14(14, “S14”, RGB(Color1, Color2, 0), 0,4);
    If Period = 15 Then Plot15(15, “S15”, RGB(Color1, Color2, 0), 0,4);
    If Period = 16 Then Plot16(16, “S16”, RGB(Color1, Color2, 0), 0,4);
    If Period = 17 Then Plot17(17, “S17”, RGB(Color1, Color2, 0), 0,4);
    If Period = 18 Then Plot18(18, “S18”, RGB(Color1, Color2, 0), 0,4);
    If Period = 19 Then Plot19(19, “S19”, RGB(Color1, Color2, 0), 0,4);
    If Period = 20 Then Plot20(20, “S20”, RGB(Color1, Color2, 0), 0,4);
    If Period = 21 Then Plot21(21, “S21”, RGB(Color1, Color2, 0), 0,4);
    If Period = 22 Then Plot22(22, “S22”, RGB(Color1, Color2, 0), 0,4);
    If Period = 23 Then Plot23(23, “S23”, RGB(Color1, Color2, 0), 0,4);
    If Period = 24 Then Plot24(24, “S24”, RGB(Color1, Color2, 0), 0,4);
    If Period = 25 Then Plot25(25, “S25”, RGB(Color1, Color2, 0), 0,4);
    If Period = 26 Then Plot26(26, “S26”, RGB(Color1, Color2, 0), 0,4);
    If Period = 27 Then Plot27(27, “S27”, RGB(Color1, Color2, 0), 0,4);
    If Period = 28 Then Plot28(28, “S28”, RGB(Color1, Color2, 0), 0,4);
    If Period = 29 Then Plot29(29, “S29”, RGB(Color1, Color2, 0), 0,4);
    If Period = 30 Then Plot30(30, “S30”, RGB(Color1, Color2, 0), 0,4);
    If Period = 31 Then Plot31(31, “S31”, RGB(Color1, Color2, 0), 0,4);
    If Period = 32 Then Plot32(32, “S32”, RGB(Color1, Color2, 0), 0,4);
    If Period = 33 Then Plot33(33, “S33”, RGB(Color1, Color2, 0), 0,4);
    If Period = 34 Then Plot34(34, “S34”, RGB(Color1, Color2, 0), 0,4);
    If Period = 35 Then Plot35(35, “S35”, RGB(Color1, Color2, 0), 0,4);
    If Period = 36 Then Plot36(36, “S36”, RGB(Color1, Color2, 0), 0,4);
    If Period = 37 Then Plot37(37, “S37”, RGB(Color1, Color2, 0), 0,4);
    If Period = 38 Then Plot38(38, “S38”, RGB(Color1, Color2, 0), 0,4);
    If Period = 39 Then Plot39(39, “S39”, RGB(Color1, Color2, 0), 0,4);
    If Period = 40 Then Plot40(40, “S40”, RGB(Color1, Color2, 0), 0,4);
    If Period = 41 Then Plot41(41, “S41”, RGB(Color1, Color2, 0), 0,4);
    If Period = 42 Then Plot42(42, “S42”, RGB(Color1, Color2, 0), 0,4);
    If Period = 43 Then Plot43(43, “S43”, RGB(Color1, Color2, 0), 0,4);
    If Period = 44 Then Plot44(44, “S44”, RGB(Color1, Color2, 0), 0,4);
    If Period = 45 Then Plot45(45, “S45”, RGB(Color1, Color2, 0), 0,4);
    If Period = 46 Then Plot46(46, “S46”, RGB(Color1, Color2, 0), 0,4);
    If Period = 47 Then Plot47(47, “S47”, RGB(Color1, Color2, 0), 0,4);
    If Period = 48 Then Plot48(48, “S48”, RGB(Color1, Color2, 0), 0,4);
End;
    