
---------------------------------------------------------------------+
Фунция  JJMASeries  разработана  на  основе  алгоритма  JMA  от  Jurik
Reasearch. С её помощью можно применять JMA сглаживание при разработке
любых  индикаторов  для  торговой  платформы Metatrader4. Сама функция
представлена  в виде файла JJMASeries.mqh . Описание работы с функцией
и  механизм обращения к ней представлены в самом файле JJMASeries.mqh.
В  папке  "Indicators" в виде примеров индикаторы, разработанные на её
основе.  Изучать  их  следует в последовательности JJMA, J2JMA, JFatl,
3c_JRSX_Hs, JMACD, JADX, 3c_JDemark_H. Весь набор файлов представлен в
виде  архива  JJMASeries.rar.     Данная  версия  файла JJMASeries.mqh 
поддерживает экспертов, работающих только в реалтайме.   Для поддержки 
экспертов    работающих   и   на   истории,  и в реале применять  файл 
JJMASeries.mqh  из папки Exp.                    Поскольку индикаторы,
сделанные  на  основе  функции  JJMASeries,  достаточно ресурсоёмкие и 
сильно подвешивают терминал,  при его  старте  во  время подключения к
интернету,  мной была  написана   функция  INDICATOR_COUNTED(),    для 
решения этой проблемы. Эту функцию я применил во всх индикаторах.  Эту
функцию  можно применять и любых  других индикаторах для Метатрейдера. 

Для тех,  кому   нужны  просто  индикаторы,  следует положить    файлы
из папки include 

JJMASeries.mqh            (Версия файла от 03.04.2006)
INDICATOR_COUNTED.mqh     (Версия файла от 03.04.2006)
PriceSeries.mqh           (Версия файла от 03.04.2006)
3c_BB_Osc.mqh             (Версия файла от 03.04.2006)
3c_SG_Osc.mqh             (Версия файла от 03.04.2006)
3Color.mqh                (Версия файла от 03.04.2006)
JurXSeries.mqh            (Версия файла от 03.04.2006)

в папку : \MetaTrader\experts\include\ , 

а индикаторы из папок 

indicators
Pluse

в папку: \MetaTrader\experts\indicators.

Если  какие-либо  из  этих  индикаторов  уже  использовались ранее, то 
необходимо удалить их скомпилированные старые варианты с  расширениями 
ex4. 
В папке  EXP  лежат  экспертные  варианты  функций  JJMASeries.mqh   и 
JurXSeries.mqh.        Они значительно более ресурсоёмкие и их следует 
применять только для написания экспертов, работающих на истории.

---------------------------------------------------------------------+
INDICATOR_COUNTED()   -   Это   дополнительная  функция  для  возврата
количества  уже  подсчитанных баров индикатора. Её главная особенность
заключается  в  том,  что  она позволяет не пересчитывать индикатор на
всех  барах  при  подключении  к  интернету. То есть при подключении к
интернету    эта    функция   в   отличие   от   стандартной   функции
IndicatorCounted()  всё  равно  возвращает  количество подсчитанных до
подключения  к интернету баров, а не ноль! Функция INDICATOR_COUNTED()
предназначена  для  замены  функции  IndicatorCounted(). Использование
этой  функции в индикаторах будет особенно полезным для тех трейдеров,
которые  используют диалап-подключение и в целях экономии трафика лишь
периодически  подключаются  к интернету для получения новых котировок.
При  значении  параметра INDICATOR_COUNTED.Input=0; функция возвращает
количество    уже   подсчитанных   баров,   при   значении   параметра
INDICATOR_COUNTED.Input  =  1;  происходит  фиксация  времени нулевого
бара,  для  расчёта  по  его  номеру  при следующем старте функции int
start()  истинного  значения  количества  уже  подсчитанных баров. При
значении  параметра INDICATOR_COUNTED.Input = -1; происходит обнуление
времени   нулевого   бара,  если  это  необходимо,  при  использовании
оператора  return(-1);  для  функции  int  start().  Если использовать
функцию  INDICATOR_COUNTED() на всех индикаторах, которые используются
в  трейдинге,  то  торговый  терминал,  при  подключении  к интернету,
начинает  работать  почти  мгновенно  и  без  зависаний  на  абсолютно
ненужный   пересчёт   всех   баров   на   всех   индикаторах.  Примеры
использования  этой функции в приведёны тексте самой функции и в любом
из моих индикаторов. (JurX.mq4)
---------------------------------------------------------------------+
PriceSeries.mqh - Это  дополнительная  функция  для  возврата  входной 
свечной цены по её номеру и номеру бара.
---------------------------------------------------------------------+
3c_BB_Osc.mqh   -   Это файл,   созданный  для максимального упрощения 
написания индикаторов трехцветных диаграмм с Bollinger Bands.   Пример
использования - файл 3c_FTLM,STLM.mq4.
---------------------------------------------------------------------+
3c_SG_Osc.mqh   -   Это файл,   созданный  для максимального упрощения 
написания индикаторов трехцветных диаграмм с сигнальной линией. Пример
использования - файл 3c_JCCIX.mq4.
---------------------------------------------------------------------+
3Color.mqh      -   Это файл,   созданный  для максимального упрощения 
написания индикаторов трехцветных линий. Пример   использования - файл 
3c_JJMA.mq4
---------------------------------------------------------------------+
Фунция  JurXSeries  разработана  на  основе  алгоритма  сглаживания от
индикатора  JRSX  от Jurik Reasearch. С её помощью можно применять это 
сглаживание  при  разработке  любых индикаторов для торговой платформы
Metatrader4.  Сама  функция представлена в виде файла JurXSeries.mqh .
Описание  работы  с функцией и механизм обращения к ней представлены в
самом  файле JurXSeries.mqh .  В  папке  "Indicators"  в виде примеров
индикаторы, разработанные на её основе.       (JurX.mq4, JDemarkX.mq4, 
JCCIX.mq4)   Для использования этой функции и индикаторов на её основе
в  экспертах   необходимо   применять   экспертный   вариант   функции 
JurXSeries.mqh из папки Exp.
---------------------------------------------------------------------+
Файлы      VGridLinesD4.LC.mq4, VGridCycle_H4.mq4 представляют   собой  
циклические  координатные  сетки для оси времени,            пример их 
использования в шаблоне timesgrids.tpl.
---------------------------------------------------------------------+
Николай Косицин
farria@mail.redcom.ru 